openapi: 3.0.0
info:
    title: |
        Нарушения уровней напряжения (публичное API СК-11)
    version: "1.0"
    description: Данное API предоставляет информацию о нарушениях уровней напряжения.
servers:
    - url: https://ag-apppol-tumn.oduur.so/api/public/core/v2.1
    - url: https://ag-apppol-tumn.oduur.so/api/public/current-violations/v1.0
    - url: https://ag-apppol-tumn.oduur.so/api/public/indirect-measurement-links/v1.0
    - url: https://ag-apppol-tumn.oduur.so/api/public/measurement-values/v2.5
    - url: https://ag-apppol-tumn.oduur.so/api/public/object-models/v2.3
    - url: https://ag-apppol-tumn.oduur.so/api/public/operational-journal/v1.2
    - url: https://ag-apppol-tumn.oduur.so/api/public/operational-tags/v1.0
    - url: https://ag-apppol-tumn.oduur.so/api/public/related-domains/v1.1
    - url: https://ag-apppol-tumn.oduur.so/api/remote/remote-organizations/v1.0
    - url: https://ag-apppol-tumn.oduur.so/api/public/rt-events/v1.1
    - url: https://ag-apppol-tumn.oduur.so/api/public/shift-personnel/v1.2
    - url: https://ag-apppol-tumn.oduur.so/api/public/switches/v2.0
    - url: https://ag-apppol-tumn.oduur.so/api/public/topology/v2.0
    - url: https://ag-apppol-tumn.oduur.so/api/public/voltage-violations/v1.0
security:
    - bearerAuth: []

paths:
    /api/public/core/v2.1/addresses:
        get:
            operationId: getAddresses
            summary: Возвращает адреса публичного API
            description: >
                Подробно о применении этого запроса см. [Обнаружение адресов
                API](#/info/description/обнаружение-адресов-api).
            security: []
            responses:
                "200":
                    description: |
                        Адреса публичного API успешно получены.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - auth
                                    - apis
                                properties:
                                    auth:
                                        type: object
                                        required:
                                            - tokenEndpointBasic
                                            - tokenEndpointEmbedded
                                        properties:
                                            tokenEndpointBasic:
                                                description: URL для получения токена с использованием basic-аутентификации.
                                                type: string
                                                format: uri
                                                example: https://myserver/auth/app/token
                                            tokenEndpointEmbedded:
                                                description:
                                                    URL для получения токена с использованием встроенной
                                                    аутентификации.
                                                type: string
                                                format: uri
                                                example: https://myserver/auth/nego/token
                                    apis:
                                        description:
                                            Информация о доступных API. Названия свойств объекта соответствуют
                                            идентификаторам API.
                                        type: object
                                        additionalProperties:
                                            type: object
                                            required:
                                                - baseAddressTemplate
                                            properties:
                                                baseAddressTemplate:
                                                    description: >
                                                        Шаблон базового адреса API. Для получения базового адреса из
                                                        шаблона необходимо заменить в строке переменные
                                                        шаблона на их значения. Может содержать параметр
                                                        `{apiVersion}`, который следует заменять на версию
                                                        соответствующего API.
                                                    type: string
                                                    example: https://myserver/api/public/object-models/v{apiVersion}
                            example:
                                auth:
                                    tokenEndpointBasic: https://myserver/auth/app/token
                                    tokenEndpointEmbedded: https://myserver/auth/nego/token
                                apis:
                                    object-models:
                                        baseAddressTemplate: https://myserver/api/public/object-models/v{apiVersion}
                                    measurement-values:
                                        baseAddressTemplate: https://myserver/api/public/measurement-values/v{apiVersion}
    "/api/public/core/v2.1/event-subscriptions/channels/{channelId}/event-types":
        get:
            operationId: getChannelEventsSubscriptionEventTypes
            x-beta: true
            tags:
                - События
            summary: Возвращает типы событий подписки канала
            description: |
                Возвращает типы событий, на которые подписан указанный канал.

                Запрос доступен только пользователю-владельцу канала.

                См. также:
                - [Общие подписки](#/info/description/общие-подписки);
                - [Канал обратной связи](#/info/description/канал-обратной-связи).
            parameters:
                - $ref: "#/components/parameters/channelId"
            responses:
                "200":
                    description: |
                        Типы событий, на которые подписан канал, успешно получены.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        description: Список типов событий, на которые подписан данный канал.
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/EventType"
                "401":
                    $ref: "#/components/responses/401"
                "403":
                    $ref: "#/components/responses/403"
                "404":
                    $ref: "#/components/responses/404"
    "/api/public/core/v2.1/event-subscriptions/channels/{channelId}/event-types/add":
        post:
            operationId: addChannelEventsSubscriptionEventTypes
            x-beta: true
            tags:
                - События
            summary: Добавляет типы событий в подписку канала
            description: >
                Добавляет указанные типы событий в множество типов событий, на
                которые подписан указанный канал.

                Другими словами, выполняет подписку на определенные запросом типы событий.


                При успешной подписке в канал будет передано одно или несколько

                [событий о запуске потока событий](#/info/description/событие-о-запуске-потока),

                со всеми добавленными в подписку типами событий.

                В том случае, если для всех или некоторых из добавленных типов

                поток событий не может быть запущен в данный момент (прерван),

                событие о запуске потока для них будет отложено до автоматического восстановления.

                Подробно об этом событии и восстановлении состояния данных

                см. [Непрерывность потока общих событий](#/info/description/непрерывность-потока-общих-событий).


                Запрос доступен только пользователю-владельцу канала.


                См. также:

                - [Общие подписки](#/info/description/общие-подписки);

                - [Канал обратной связи](#/info/description/канал-обратной-связи).
            parameters:
                - $ref: "#/components/parameters/channelId"
            requestBody:
                required: true
                description: Запрос на добавление типов событий в подписку канала.
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                eventTypes:
                                    description:
                                        Список типов событий, на которые необходимо подписать указанный
                                        канал. Присутствующие на момент подписки типы событий в
                                        текущем множестве типов для данного канала будут
                                        проигнорированы.
                                    type: array
                                    items:
                                        $ref: "#/components/schemas/EventType"
            responses:
                "204":
                    description: |
                        Добавление типов событий в подписку канала успешно выполнено.
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "403":
                    $ref: "#/components/responses/403"
                "404":
                    $ref: "#/components/responses/404"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/core/v2.1/event-subscriptions/channels/{channelId}/event-types/remove":
        post:
            operationId: removeChannelEventsSubscriptionEventTypes
            x-beta: true
            tags:
                - События
            summary: Удаляет типы событий из подписки канала
            description: >
                Удаляет указанные типы событий из множества типов событий, на
                которые подписан указанный канал.

                Другими словами, выполняет отписку от определенных запросом типов событий.


                Запрос доступен только пользователю-владельцу канала.


                См. также:

                - [Общие подписки](#/info/description/общие-подписки);

                - [Канал обратной связи](#/info/description/канал-обратной-связи).
            parameters:
                - $ref: "#/components/parameters/channelId"
            requestBody:
                required: true
                description: Запрос на удаление типов событий из подписки канала.
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                eventTypes:
                                    description: >
                                        Список типов событий, от которых необходимо отписать указанный
                                        канал.

                                        Отсутствующие на момент отписки типы событий в текущем множестве типов для данного канала будут проигнорированы.
                                    type: array
                                    items:
                                        $ref: "#/components/schemas/EventType"
            responses:
                "204":
                    description: |
                        Удаление типов событий из подписки канала успешно выполнено.
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "403":
                    $ref: "#/components/responses/403"
                "404":
                    $ref: "#/components/responses/404"
                "422":
                    $ref: "#/components/responses/422"
    /api/public/current-violations/v1.0/equipment/statistics:
        get:
            tags:
                - Нарушения по току
            summary: Возвращает статистику нарушений оборудования
            x-beta: true
            description: >
                Возвращает оборудование с перегрузками и авариями с указанием их
                количества и длительности за период.
            operationId: getViolationStatistics
            parameters:
                - $ref: "#/components/parameters/fromDateTime"
                - $ref: "#/components/parameters/toDateTime"
                - $ref: "#/components/parameters/onlyMajorEquipment"
            responses:
                "200":
                    description: Список записей успешно получен.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/EquipmentViolationsStatistics"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "403":
                    $ref: "#/components/responses/403"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/current-violations/v1.0/equipment/{equipmentUid}/violations":
        get:
            tags:
                - Нарушения по току
            summary: Возвращает превышения допустимых токовых нагрузок по оборудованию
            x-beta: true
            description: >
                Возвращает данные о превышении допустимой токовой нагрузки и
                допустимой длительности перегрузки за выбранный период.
            operationId: getEquipmentViolations
            parameters:
                - $ref: "#/components/parameters/equipmentUid"
                - $ref: "#/components/parameters/fromDateTime"
                - $ref: "#/components/parameters/toDateTime"
            responses:
                "200":
                    description: Список записей успешно получен.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/EquipmentViolation"
                                    "@nextLink":
                                        $ref: "#/components/schemas/CollectionNextLink"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "403":
                    $ref: "#/components/responses/403"
                "404":
                    $ref: "#/components/responses/404"
                "422":
                    $ref: "#/components/responses/422"
    /api/public/indirect-measurement-links/v1.0/resolutions/get:
        post:
            operationId: getResolutionCollection
            summary: Возвращает разрешения косвенных ссылок
            description:
                Разрешает набор косвенных ссылок в значения измерений. Данные
                значений измерений при необходимости следует получать отдельными
                запросами в [API Значений Измерений](ckapi://measurement-values).
            x-beta: true
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - indirectLinkBatch
                            properties:
                                indirectLinkBatch:
                                    description: |
                                        Список косвенных ссылок, которые необходимо разрешить.
                                    type: array
                                    minItems: 1
                                    items:
                                        $ref: "#/components/schemas/IndirectLinkDescriptor"
                                $crossOrganization:
                                    description: >
                                        Если флаг установлен, то для ссылок, которые возможно разрешить
                                        только в удаленных связанных организациях,

                                        результат разрешения будет содержать UID целевой организации.

                                        В противном случае разрешение будет выполняться исключительно по данным текущей организации.


                                        Опция доступна не во всех вариантах поставки комплекса.
                                    type: boolean
                                    default: false
            responses:
                "200":
                    description: >
                        Запрос успешно обработан, однако некоторые косвенные ссылки могут
                        быть не разрешены.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        description: >
                                            Каждый элемент массива соответствует

                                            результату разрешения косвенной ссылки из запроса с тем же индексом.
                                        type: array
                                        items:
                                            oneOf:
                                                - type: object
                                                  required:
                                                      - value
                                                  properties:
                                                      value:
                                                          $ref: "#/components/schemas/IndirectLinkResolution"
                                                - $ref: "#/components/schemas/IndirectLinkRemoteReference"
                                                - type: object
                                                  required:
                                                      - error
                                                  properties:
                                                      error:
                                                          $ref: "#/components/schemas/ProblemDetails"
                            examples:
                                default:
                                    summary: Ответ на запрос разрешения нескольких ссылок
                                    description:
                                        Первая ссылка разрешается успешно, а вторая не разрешается по
                                        причине ошибки запроса.
                                    value:
                                        value:
                                            - value:
                                                  measurementValueUid: ae39bd33-4431-4831-a424-be8429462213
                                            - error:
                                                  type: https://tools.ietf.org/html/rfc7231#section-6.5.1
                                                  title: Unprocessable Entity
                                                  status: 422
                                                  detail: Provided link can not be resolved
                                crossOrganization:
                                    summary: Ответ на запрос с crossOrganization
                                    description:
                                        Первая ссылка разрешается локально, а вторая должна быть разрешена
                                        в другой организации.
                                    value:
                                        value:
                                            - value:
                                                  measurementValueUid: ae39bd33-4431-4831-a424-be8429462213
                                            - "@remoteOrganizationUid": be39bd33-4431-4831-a424-be8429462213
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/measurement-values/v2.5/{valueType}/{measurementValueUid}/data/snapshot":
        get:
            operationId: getDataSnapshot
            tags:
                - Снимок данных
            summary: Возвращает снимок данных значения измерения
            description: >
                Возвращает экземпляр данных значения измерения актуальный на
                указанный момент времени.


                Если существует экземпляр данных, первая метка времени которого строго равна указанной в

                запросе, то он считается актуальным.


                В противном случае актуальным считается:

                - для значений измерений, хранящихся по изменению, — экземпляр данных с ближайшей слева

                меткой времени;

                - для значений измерений, хранящихся с шагом, — экземпляр данных из шага хранения,

                начало которого вычисляется путём округления указанного в запросе времени вниз.
            parameters:
                - $ref: "#/components/parameters/valueType"
                - $ref: "#/components/parameters/measurementValueUid"
                - name: timeStamp
                  in: query
                  required: false
                  description: >
                      Момент времени, для которого требуется получить актуальное значение
                      измерения. Если не задан, то будет использоваться текущий момент
                      времени.
                  schema:
                      $ref: "#/components/schemas/DateTime"
                - name: qualityCodesFilter
                  in: query
                  required: false
                  schema:
                      $ref: "#/components/schemas/QualityCodesFilter"
                - name: nullifyFutureByChangeValues
                  in: query
                  required: false
                  schema:
                      $ref: "#/components/schemas/NullifyFutureByChangeValues"
            responses:
                "200":
                    description: >
                        Запрос успешно выполнен, но значение измерения может не содержать
                        данных на указанный момент времени.
                    content:
                        application/json:
                            schema:
                                description: >
                                    Содержит один экземпляр данных значения измерения. Если измерение
                                    не найдено или у него отсутствуют данные, экземпляр данных
                                    будет содержать нулевой код качества.
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        $ref: "#/components/schemas/Data"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/measurement-values/v2.5/{valueType}/data/get-snapshot":
        post:
            operationId: getMultivalueDataSnapshot
            tags:
                - Снимок данных
            summary: Возвращает снимок данных множества значений измерений
            description: >
                Возвращает экземпляры данных множества значений измерения,
                актуальные на указанный момент времени.

                Если существует экземпляр данных, первая метка времени которого строго равна указанной в запросе, то он считается актуальным.

                В противном случае актуальным считается: - для значений измерений, хранящихся по изменению, — экземпляр данных с ближайшей слева меткой времени; - для значений измерений, хранящихся с шагом, — экземпляр данных из шага хранения, начало которого вычисляется путём округления указанного в запросе времени вниз.
            parameters:
                - $ref: "#/components/parameters/valueType"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - uids
                            properties:
                                uids:
                                    description: UID-ы значений измерений.
                                    type: array
                                    minItems: 1
                                    items:
                                        $ref: "#/components/schemas/Uid"
                                timeStamp:
                                    description: >
                                        Момент времени, для которого требуется получить актуальное значение
                                        измерения. Если не задан, то будет использоваться текущий
                                        момент времени.
                                    allOf:
                                        - $ref: "#/components/schemas/DateTime"
                                qualityCodesFilter:
                                    $ref: "#/components/schemas/QualityCodesFilter"
                                nullifyFutureByChangeValues:
                                    $ref: "#/components/schemas/NullifyFutureByChangeValues"
            responses:
                "200":
                    description: >
                        Запрос успешно выполнен, но некоторые значения могут не содержать
                        данных на указанный момент времени.
                    content:
                        application/json:
                            schema:
                                description: >
                                    Содержит массив, в котором представлено по одному экземпляру данных
                                    для каждого значения измерения том же порядке, в котором в
                                    запросе заданы их UID-ы. Если измерение не найдено или у него
                                    отсутствуют данные, соответствующий экземпляр данных будет
                                    содержать нулевой код качества.
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/Data"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/measurement-values/v2.5/{valueType}/{measurementValueUid}/data/in-interval":
        get:
            operationId: getDataInInterval
            tags:
                - Данные в интервале времени
            summary: Возвращает данные значения измерения в интервале времени
            description: >
                Возвращает все экземпляры данных значения измерения, которые были
                актуальными в пределах

                указанного интервала времени включительно.


                Первым возвращается экземпляр данных, актуальный на момент времени, соответствующий

                левой границе.


                Последним возвращается экземпляр данных, актуальный на момент времени,

                соответствующий правой границе.


                Экземпляры данных в ответе не повторяются и упорядочены по возрастанию первой метки времени.
            parameters:
                - $ref: "#/components/parameters/valueType"
                - $ref: "#/components/parameters/measurementValueUid"
                - name: fromTimeStamp
                  in: query
                  required: true
                  description: Левая граница интервала.
                  schema:
                      $ref: "#/components/schemas/DateTime"
                - name: toTimeStamp
                  in: query
                  required: true
                  description: Правая граница интервала.
                  schema:
                      $ref: "#/components/schemas/DateTime"
            responses:
                "200":
                    description: >
                        Запрос успешно выполнен, но значение может не содержать данных в
                        указанном интервале.
                    content:
                        application/json:
                            schema:
                                description: >
                                    Содержит массив данных значения измерения. Массив будет пуст, если
                                    измерение не найдено или у него отсутствуют значения.
                                type: object
                                required:
                                    - value
                                properties:
                                    "@nextLink":
                                        $ref: "#/components/schemas/CollectionNextLink"
                                    value:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/Data"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/measurement-values/v2.5/{valueType}/data/get-table":
        post:
            operationId: getDataTable
            tags:
                - Данные в интервале времени
            summary: Возвращает таблицу данных множества значений измерений
            description: |
                Возвращает данные значений измерений в интервале времени в виде таблицы,
                в которой каждая строка соответствует одному UID из запроса,
                количество столбцов определяется выражением `(to - from)/step + 1`,
                a столбец номер `i` содержит экземпляры данных значений измерений,
                актуальные на момент времени `from + step*(i - 1)`,
                где `from` — левая граница интервала, `to` — правая граница интервала,
                а `step` — шаг, заданный в параметрах запроса.
            parameters:
                - $ref: "#/components/parameters/valueType"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - uids
                                - fromTimeStamp
                                - toTimeStamp
                                - stepUnits
                                - stepValue
                            properties:
                                uids:
                                    description: UID-ы значений измерений.
                                    type: array
                                    minItems: 1
                                    items:
                                        $ref: "#/components/schemas/Uid"
                                fromTimeStamp:
                                    description: Левая граница интервала.
                                    allOf:
                                        - $ref: "#/components/schemas/DateTime"
                                toTimeStamp:
                                    description: Правая граница интервала.
                                    allOf:
                                        - $ref: "#/components/schemas/DateTime"
                                stepUnits:
                                    description: |
                                        Единицы измерения шага времени между столбцами:
                                        - `seconds` - секунды;
                                        - `days` - дни;
                                        - `months` - месяцы;
                                        - `years` - года.
                                    type: string
                                    enum:
                                        - seconds
                                        - days
                                        - months
                                        - years
                                stepValue:
                                    description: Значение шага времени между столбцами.
                                    type: integer
                                    format: int32
                                calculatedTimeStamp:
                                    description: >
                                        Флаг использования вычисленных меток времени:

                                        - `false` - не использовать;

                                        - `true` - первые метки времени возвращаемых значений заменить началом соответствующего шага.
                                    type: boolean
                                    default: false
                                nullifyFutureByChangeValues:
                                    $ref: "#/components/schemas/NullifyFutureByChangeValues"
            responses:
                "200":
                    description: >
                        Запрос успешно выполнен, но некоторые значения измерений могут не
                        содержать данных в указанном интервале.
                    content:
                        application/json:
                            schema:
                                description: >
                                    Содержит таблицу данных значений измерений. Если измерение не
                                    найдено или у него отсутствуют данные за некоторый момент
                                    времени, соответствующий экземпляр данных будет содержать
                                    нулевой код качества.
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/DataTableRow"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/measurement-values/v2.5/numeric/{measurementValueUid}/data/statistics/arithmetic-mean":
        get:
            operationId: getDataStatisticsArithmeticMean
            tags:
                - Статистика
            summary:
                Возвращает среднее арифметическое из достоверных данных значения
                измерения в интервале времени
            description: >
                Возвращает среднее арифметическое из достоверных данных значения
                измерения,

                которые были актуальными в пределах указанного интервала времени включительно.
            parameters:
                - $ref: "#/components/parameters/measurementValueUid"
                - name: fromTimeStamp
                  in: query
                  required: true
                  description: Левая граница интервала.
                  schema:
                      $ref: "#/components/schemas/DateTime"
                - name: toTimeStamp
                  in: query
                  required: true
                  description: Правая граница интервала.
                  schema:
                      $ref: "#/components/schemas/DateTime"
            responses:
                "200":
                    description: >
                        Запрос успешно выполнен, но значение измерения может не содержать
                        данных в указанном интервале времени.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        $ref: "#/components/schemas/AggregatedData"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/measurement-values/v2.5/numeric/{measurementValueUid}/data/statistics/function-mean":
        get:
            operationId: getDataStatisticsFunctionMean
            tags:
                - Статистика
            summary:
                Возвращает среднее значение функции из достоверных данных значения
                измерения в интервале времени
            description: >
                Возвращает среднее значение функции значения измерения от времени

                (интеграл функции, разделённый на длительность).

                Подсчет выполняется в рамках указанного интервала времени включительно,

                но только на тех частях области определения функции,

                на которых значения функции были достоверными.


                Интеграл функции для данных с шагом рассчитывается по методу прямоугольников,

                для данных по изменению - по методу обобщённых трапеций (параметр tau = 3 секунды).
            parameters:
                - $ref: "#/components/parameters/measurementValueUid"
                - name: fromTimeStamp
                  in: query
                  required: true
                  description: Левая граница интервала.
                  schema:
                      $ref: "#/components/schemas/DateTime"
                - name: toTimeStamp
                  in: query
                  required: true
                  description: Правая граница интервала.
                  schema:
                      $ref: "#/components/schemas/DateTime"
            responses:
                "200":
                    description: >
                        Запрос успешно выполнен, но значение измерения может не содержать
                        данных в указанном интервале времени.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        $ref: "#/components/schemas/AggregatedData"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/measurement-values/v2.5/numeric/{measurementValueUid}/data/statistics/maximum":
        get:
            operationId: getDataStatisticsMaximum
            tags:
                - Статистика
            summary:
                Возвращает максимальное из достоверных данных значения измерения в
                интервале времени
            description: >
                Возвращает максимальное из достовеных данных значения измерения,

                которое было актуальным в пределах указанного интервала времени включительно.
            parameters:
                - $ref: "#/components/parameters/measurementValueUid"
                - name: fromTimeStamp
                  in: query
                  required: true
                  description: Левая граница интервала.
                  schema:
                      $ref: "#/components/schemas/DateTime"
                - name: toTimeStamp
                  in: query
                  required: true
                  description: Правая граница интервала.
                  schema:
                      $ref: "#/components/schemas/DateTime"
            responses:
                "200":
                    description: >
                        Запрос успешно выполнен, но значение измерения может не содержать
                        данных в указанном интервале времени.
                    content:
                        application/json:
                            schema:
                                description: >
                                    Содержит экземпляр данных значения измерения с максимальным
                                    значением на интервале времени. В случае если на интервале
                                    существует несколько экземпляров с максимальным
                                    значением,  возвращается экземпляр с наименьшей меткой
                                    времени. Если измерение не найдено или у него отсутствуют
                                    данные, экземпляр данных будет содержать нулевой код качества.
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        $ref: "#/components/schemas/Data"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/measurement-values/v2.5/numeric/{measurementValueUid}/data/statistics/minimum":
        get:
            operationId: getDataStatisticsMinimum
            tags:
                - Статистика
            summary:
                Возвращает минимальное из достоверных данных значения измерения в
                интервале времени
            description: >
                Возвращает минимальное из достоверных данных значения измерения,

                которое было актуальным в пределах указанного интервала времени включительно.
            parameters:
                - $ref: "#/components/parameters/measurementValueUid"
                - name: fromTimeStamp
                  in: query
                  required: true
                  description: Левая граница интервала.
                  schema:
                      $ref: "#/components/schemas/DateTime"
                - name: toTimeStamp
                  in: query
                  required: true
                  description: Правая граница интервала.
                  schema:
                      $ref: "#/components/schemas/DateTime"
            responses:
                "200":
                    description: >
                        Запрос успешно выполнен, но значение измерения может не содержать
                        данных в указанном интервале времени.
                    content:
                        application/json:
                            schema:
                                description: >
                                    Содержит экземпляр данных значения измерения с минимальным
                                    значением на интервале времени. В случае если на интервале
                                    существует несколько экземпляров с минимальным
                                    значением,  возвращается экземпляр с наименьшей меткой
                                    времени. Если измерение не найдено или у него отсутствуют
                                    данные, экземпляр данных будет содержать нулевой код качества.
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        $ref: "#/components/schemas/Data"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/measurement-values/v2.5/numeric/{measurementValueUid}/data/statistics/sum":
        get:
            operationId: getDataStatisticsSum
            tags:
                - Статистика
            summary:
                Возвращает сумму достоверных данных значения измерения в интервале
                времени
            description: >
                Возвращает арифметическую сумму достоверных данных значения
                измерения,

                которое было актуальным в пределах указанного интервала времени включительно.
            parameters:
                - $ref: "#/components/parameters/measurementValueUid"
                - name: fromTimeStamp
                  in: query
                  required: true
                  description: Левая граница интервала.
                  schema:
                      $ref: "#/components/schemas/DateTime"
                - name: toTimeStamp
                  in: query
                  required: true
                  description: Правая граница интервала.
                  schema:
                      $ref: "#/components/schemas/DateTime"
            responses:
                "200":
                    description: >
                        Запрос успешно выполнен, но значение измерения может не содержать
                        данных в указанном интервале времени.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        $ref: "#/components/schemas/AggregatedData"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/measurement-values/v2.5/{valueType}/data/write":
        post:
            operationId: writeData
            tags:
                - Изменение данных
            summary: Записывает данные значений измерений
            description: Записывает данные значений измерений.
            parameters:
                - $ref: "#/components/parameters/valueType"
            requestBody:
                required: true
                description: Запрос на запись данных значений измерений.
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - values
                            properties:
                                writeType:
                                    description: >
                                        Способ записи данных.


                                        При любом способе записи запрещается выставлять в коде качества

                                        флаг удаления,

                                        т.к. для удаления данных значений измерений предназначен запрос `/delete`.


                                        Для значений измерений по изменению допускается:


                                        - не задан (запись актуальных данных) — первая метка времени

                                        больше последней записанной или не указана (будет установлена сервером);

                                        - `manualWrite` (ручной ввод актуальных данных) — первая

                                        метка времени больше последней записанной или не указана (будет установлена сервером),

                                        в коде качества должен быть установлен флаг ручного ввода;

                                        - `forcedToArchive` (редактирование архива) — первая метка

                                        времени обязательно указана.


                                        Для данных с шагом допускается:


                                        - не задан (запись данных) — первая метка может быть любой

                                        в пределах допустимого интервала хранения

                                        и должна быть указана обязательно (будет округлена до шага хранения),

                                        запрещается выставлять в коде качества флаг ручного ввода;

                                        - `manualWrite` (ручной ввод данных) — первая метка может быть любой

                                        в пределах допустимого интервала хранения

                                        и должна быть указана обязательно (будет округлена до шага хранения),

                                        в коде качества должен быть установлен флаг ручного ввода;

                                        - `forcedToArchive` (редактирование архива) — поведение

                                        идентично 'не задан'.
                                    type: string
                                    enum:
                                        - forcedToArchive
                                        - manualWrite
                                values:
                                    description: Описание экземпляров данных значений, которые необходимо записать.
                                    type: array
                                    minItems: 1
                                    items:
                                        $ref: "#/components/schemas/DataWriteModel"
            responses:
                "200":
                    description: >
                        Запрос на запись данных был успешно обработан, но запись некоторых
                        экземпляров данных могла закончиться неуспешно.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    errors:
                                        description: |
                                            Список ошибок, возникших при записи значений.
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/DataWriteError"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "403":
                    $ref: "#/components/responses/403"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/measurement-values/v2.5/{valueType}/data/delete":
        post:
            operationId: deleteData
            tags:
                - Изменение данных
            summary: Удаляет данные значений измерений
            description: Удаляет данные значений измерений с заданными метками времени.
            parameters:
                - $ref: "#/components/parameters/valueType"
            requestBody:
                required: true
                description: Запрос на удаление данных значений измерений.
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - selectors
                            properties:
                                selectors:
                                    description: Селекторы данных значений измерений, которые необходимо удалить.
                                    type: array
                                    minItems: 1
                                    items:
                                        type: object
                                        required:
                                            - uid
                                            - timeStamp
                                        properties:
                                            uid:
                                                $ref: "#/components/schemas/Uid"
                                            timeStamp:
                                                $ref: "#/components/schemas/DateTime"
            responses:
                "200":
                    description: >
                        Запрос на удаление данных был успешно обработан, но удаление
                        некоторых данных могло закончиться неуспешно.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    errors:
                                        description: |
                                            Список ошибок, возникших при удалении.
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/DataWriteError"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "403":
                    $ref: "#/components/responses/403"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/measurement-values/v2.5/data/subscriptions/channels/{channelId}/subscriptions":
        post:
            operationId: createChannelDataSubscription
            x-beta: true
            tags:
                - Подписка
            summary: Создает подписку на данные
            description: >

                Создает подписку на данные значений измерений.


                Запрос доступен только пользователю-владельцу канала.


                Подробнее см. [Получение событий об изменении данных значений измерений](#/info/description/получение-событий-об-изменении-данных-значений-измерений).
            parameters:
                - $ref: "#/components/parameters/channelId"
            requestBody:
                required: true
                description: Запрос на создание подписки.
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - valueType
                            properties:
                                subscriptionType:
                                    $ref: "#/components/schemas/SubscriptionType"
                                valueType:
                                    $ref: "#/components/schemas/ValueType"
            responses:
                "201":
                    description: |
                        Подписка успешно создана.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        type: object
                                        required:
                                            - subscriptionId
                                        properties:
                                            subscriptionId:
                                                description: Идентификатор созданной подписки.
                                                type: string
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "403":
                    $ref: "#/components/responses/403"
                "404":
                    $ref: "#/components/responses/404"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/measurement-values/v2.5/data/subscriptions/channels/{channelId}/subscriptions/{subscriptionId}":
        delete:
            operationId: deleteChannelDataSubscription
            x-beta: true
            tags:
                - Подписка
            summary: Отменяет подписку на данные
            description: >
                Удаляет подписку на данные значений измерений.


                Запрос доступен только пользователю-владельцу канала.


                Подробнее см. [Получение событий об изменении данных значений измерений](#/info/description/получение-событий-об-изменении-данных-значений-измерений).
            parameters:
                - $ref: "#/components/parameters/channelId"
                - $ref: "#/components/parameters/subscriptionId"
            responses:
                "204":
                    description: |
                        Подписка не существовала, либо успешно удалена.
                "401":
                    $ref: "#/components/responses/401"
                "403":
                    $ref: "#/components/responses/403"
        patch:
            operationId: modifyChannelDataSubscription
            x-beta: true
            tags:
                - Подписка
            summary: Изменяет набор значений измерений в подписке
            description: >
                Изменяет множество значений измерений,

                актуальные данные по которым будут приходить в указанный канал по указанной подписке.

                Другими словами, позволяет подписаться на определенные запросом значения измерений,

                а также отписаться от определенных запросом значений измерений.

                Порядок применения операций подписки и отписки не определен и может быть произвольным,

                не следует в одном запросе передавать противоречивые данные

                (добавление и удаление одного и того же UID).


                Если запрос возвращает статус `404`, следует считать подписку удаленной/несуществующей,

                независимо от получения события о разрыве подписки.


                Запрос доступен только пользователю-владельцу канала.


                Подробнее см. [Получение событий об изменении данных значений измерений](#/info/description/получение-событий-об-изменении-данных-значений-измерений).
            parameters:
                - $ref: "#/components/parameters/channelId"
                - $ref: "#/components/parameters/subscriptionId"
            requestBody:
                required: true
                description: Запрос на изменение набора значений измерений в подписке.
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                measurementValueToAddUids:
                                    description:
                                        Список UID значений измерений, которые необходимо добавить в
                                        подписку.
                                    type: array
                                    items:
                                        $ref: "#/components/schemas/Uid"
                                measurementValueToRemoveUids:
                                    description:
                                        Список UID значений измерений, которые необходимо удалить из
                                        подписки.
                                    type: array
                                    items:
                                        $ref: "#/components/schemas/Uid"
            responses:
                "204":
                    description: |
                        Изменение множества значений измерений в подписке успешно выполнено.
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "403":
                    $ref: "#/components/responses/403"
                "404":
                    $ref: "#/components/responses/404"
                "422":
                    $ref: "#/components/responses/422"
    /api/public/object-models/v2.3/:
        get:
            operationId: getModelCollection
            tags:
                - Общая информация
            summary: Возвращает список моделей
            description: Возвращает список доступных объектных моделей.
            responses:
                "200":
                    description: |
                        Список доступных объектных моделей успешно получен.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/ModelDescriptor"
                "401":
                    $ref: "#/components/responses/401"
    "/{modelUid}":
        get:
            operationId: getModel
            tags:
                - Общая информация
            summary: Возвращает описание модели
            description: Возвращает описание объектной модели по ее UID.
            parameters:
                - $ref: "#/components/parameters/modelUid"
            responses:
                "200":
                    description: |
                        Описание объектной модели успешно получено.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        $ref: "#/components/schemas/ModelDescriptor"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
    "/{modelUid}/metadata":
        get:
            operationId: getModelMetadata
            tags:
                - Общая информация
            summary: Возвращает метаданные модели
            description: >
                Возвращает метаданные объектной модели по ее UID в виде набора
                описания типов данных.
            parameters:
                - $ref: "#/components/parameters/modelUid"
            responses:
                "200":
                    description: |
                        Метаданные объектной модели успешно получены.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        $ref: "#/components/schemas/ModelMetadata"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
    "/{modelUid}/versions":
        get:
            operationId: getVersionCollection
            tags:
                - Версии модели
            summary: Возвращает список версий модели
            description: >
                Возвращает список версий выбранной объектной модели. Если выбранная
                модель не поддерживает версии, возвращает ответ со статусом 404.
            parameters:
                - $ref: "#/components/parameters/modelUid"
            responses:
                "200":
                    description: |
                        Список версий модели успешно получен.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/ModelVersionDescriptor"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
    "/{modelUid}/versions/{modelVersion}":
        get:
            operationId: getVersion
            tags:
                - Версии модели
            summary: Возвращает описание версии модели
            description: Возвращает описание выбранной версии выбранной объектной модели.
            parameters:
                - $ref: "#/components/parameters/modelUid"
                - $ref: "#/components/parameters/modelVersion"
            responses:
                "200":
                    description: |
                        Описание версии модели успешно получено.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        $ref: "#/components/schemas/ModelVersionDescriptor"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
    "/{modelUid}/versions/{modelVersion}/execute-script":
        post:
            operationId: executeScript
            tags:
                - Получение объектов
            summary: Выполняет скриптовый запрос данных
            description: >
                Выполняет выборку данных из модели с помощью скрипта на языке Lua.
                Подробно о выполнении скриптов см. [Скриптовые
                запросы](#/info/description/скриптовые-запросы).
            parameters:
                - $ref: "#/components/parameters/modelUid"
                - $ref: "#/components/parameters/modelVersion"
            requestBody:
                required: true
                description: Запрос данных модели.
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - luaScript
                            properties:
                                luaScript:
                                    type: string
                                    description: |
                                        Скрипт на языке Lua, выполняющий выборку данных из модели.
            responses:
                "200":
                    description: |
                        Скриптовый запрос успешно выполнен.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    modelVersion:
                                        description: >
                                            Версия модели, в которой был выполнен запрос. Будет гарантированно
                                            присутствовать, если модель поддерживает версии, в
                                            противном случае будет отсутствовать.
                                        type: number
                                        format: int32
                                    value:
                                        description: >
                                            Результат запроса в виде набора записей, сформированных скриптом,
                                            формат которых определяется скриптом.
                                        type: array
                                        example: []
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
                "422":
                    $ref: "#/components/responses/422"
    "/{modelUid}/releases":
        get:
            operationId: getReleaseCollection
            tags:
                - Расписания и выпуски
            summary: Возвращает список выпусков модели
            x-beta: true
            description: >
                Возвращает список выпусков выбранной объектной модели. Если
                выбранная модель не поддерживает выпуски, возвращает ответ со статусом
                404.
            parameters:
                - $ref: "#/components/parameters/modelUid"
            responses:
                "200":
                    description: |
                        Список выпусков модели успешно получен.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/ModelReleaseDescriptor"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
    "/{modelUid}/releases/{modelRelease}":
        get:
            operationId: getRelease
            tags:
                - Расписания и выпуски
            summary: Возвращает описание выпуска модели
            x-beta: true
            description: Возвращает описание выбранного выпуска выбранной объектной модели.
            parameters:
                - $ref: "#/components/parameters/modelUid"
                - $ref: "#/components/parameters/modelRelease"
            responses:
                "200":
                    description: |
                        Описание выпуска модели успешно получено.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        $ref: "#/components/schemas/ModelReleaseDescriptor"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
    /api/public/operational-journal/v1.2/records/query:
        post:
            tags:
                - Записи журнала
            summary: Возвращает список записей по объекту фильтра
            x-beta: true
            description: |
                Используется для получения списка записей,
                удовлетворяющих условиям фильтрации, указанным в переданном фильтре.
                Запрос не возвращает отмененные и измененные записи.
            operationId: getRecords
            requestBody:
                description: Фильтр с условиями для выборки записей.
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Filter"
            responses:
                "200":
                    description: Список записей успешно получен.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - type: object
                                      required:
                                          - value
                                      properties:
                                          value:
                                              type: array
                                              items:
                                                  $ref: "#/components/schemas/Record"
                                    - $ref: "#/components/schemas/CollectionPagePostResponse"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "403":
                    description: Нет прав на работу с журналом.
                    content:
                        application/problem+json:
                            schema:
                                $ref: "#/components/schemas/403"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/operational-journal/v1.2/records/{uid}":
        get:
            tags:
                - Записи журнала
            summary: Возвращает запись по идентификатору
            x-beta: true
            description: Используется для получения записи по переданному идентификатору.
            operationId: getRecord
            parameters:
                - $ref: "#/components/parameters/RecordUid"
            responses:
                "200":
                    description: Запись успешно получена.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        $ref: "#/components/schemas/Record"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "403":
                    description: >
                        Нет прав на работу с журналом,

                        либо нет прав на чтение записей по категории,к которой относится запрашиваемая запись.
                    content:
                        application/problem+json:
                            schema:
                                $ref: "#/components/schemas/403"
                "404":
                    description: Запись с запрашиваемым идентификатором не найдена.
                    content:
                        application/problem+json:
                            schema:
                                $ref: "#/components/schemas/404"
                "422":
                    $ref: "#/components/responses/422"
    /api/public/operational-journal/v1.2/records:
        post:
            tags:
                - Записи журнала
            summary: Создает новую запись
            x-beta: true
            description:
                Используется для создания новой записи в соответствии с переданными
                для новой записи данными.
            operationId: createRecord
            requestBody:
                description: Данные для создания новой записи.
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - event
                            properties:
                                uid:
                                    type: string
                                    description: >
                                        Идентификатор записи.

                                        Заполняется в случае, если необходимо чтобы новая запись создалась с конкретным идентификатором.
                                    format: uuid
                                event:
                                    $ref: "#/components/schemas/RecordEventWrite"
            responses:
                "201":
                    description: Новая запись успешно создана.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        type: object
                                        required:
                                            - uid
                                        properties:
                                            uid:
                                                type: string
                                                format: uuid
                                                description: Идентификатор созданной новой записи.
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "403":
                    description: Нет прав на работу с журналом, либо нет прав на
                        создание/редактирование записей.
                    content:
                        application/problem+json:
                            schema:
                                $ref: "#/components/schemas/403"
                "409":
                    description: Запись с переданным идентификатором уже существует.
                    content:
                        application/problem+json:
                            schema:
                                $ref: "#/components/schemas/409"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/operational-journal/v1.2/records/{uid}/modify":
        post:
            tags:
                - Записи журнала
            summary: Изменяет существующую запись
            x-beta: true
            description: >
                Используется для изменения существующей записи.

                При этом создается изменяющая запись в соответствии с переданными для новой записи данными.

                Существующая запись становится измененной и в запросе чтения записей не возвращается.
            operationId: modifyRecord
            parameters:
                - $ref: "#/components/parameters/RecordUid"
            requestBody:
                description: Данные для создания изменяющей записи.
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - event
                            properties:
                                modifyingRecordUid:
                                    type: string
                                    description: >
                                        Идентификатор изменяющей записи.

                                        Заполняется в случае, если необходимо чтобы изменяющая запись создалась с конкретным идентификатором.
                                    format: uuid
                                event:
                                    $ref: "#/components/schemas/RecordEventWrite"
            responses:
                "200":
                    description: Существующая запись успешно изменена.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        type: object
                                        required:
                                            - modifyingRecord
                                        properties:
                                            modifyingRecord:
                                                type: object
                                                description: Информация о созданной изменяющей записи.
                                                required:
                                                    - uid
                                                properties:
                                                    uid:
                                                        type: string
                                                        format: uuid
                                                        description: Идентификатор созданной изменяющей записи.
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "403":
                    description: Нет прав на работу с журналом, либо нет прав на
                        создание/редактирование записей.
                    content:
                        application/problem+json:
                            schema:
                                $ref: "#/components/schemas/403"
                "404":
                    description: Изменяемая запись не найдена.
                    content:
                        application/problem+json:
                            schema:
                                $ref: "#/components/schemas/404"
                "409":
                    description: Запись с переданным идентификатором уже является измененной.
                    content:
                        application/problem+json:
                            schema:
                                $ref: "#/components/schemas/409"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/operational-journal/v1.2/records/{uid}/cancel":
        post:
            tags:
                - Записи журнала
            summary: Отменяет существующую запись
            x-beta: true
            description: >
                Используется для отмены существующей записи.

                При этом создается отменяющая запись, в которой указывается переданная в запросе причина отмены.

                Существующая запись становится отмененной и в запросе чтения записей не возвращается.
            operationId: cancelRecord
            parameters:
                - $ref: "#/components/parameters/RecordUid"
            requestBody:
                description: Данные для создания отменяющей записи.
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - cancelReason
                            properties:
                                cancelReason:
                                    type: string
                                    description: Текстовое описание причины отмены записи.
            responses:
                "200":
                    description: Существующая запись успешно отменена.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        type: object
                                        required:
                                            - cancelingRecord
                                        properties:
                                            cancelingRecord:
                                                type: object
                                                description: Информация о созданной отменяющей записи.
                                                required:
                                                    - uid
                                                properties:
                                                    uid:
                                                        type: string
                                                        format: uuid
                                                        description: Идентификатор созданной отменяющей записи.
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "403":
                    description: Нет прав на работу с журналом, либо нет прав на
                        создание/редактирование записей.
                    content:
                        application/problem+json:
                            schema:
                                $ref: "#/components/schemas/403"
                "404":
                    description: Отменяемая запись не найдена.
                    content:
                        application/problem+json:
                            schema:
                                $ref: "#/components/schemas/404"
                "409":
                    description: >
                        Запись с переданным для отменяющей записи идентификатором уже
                        существует,

                        либо запись с переданным для отменяемой записи идентификатором уже является отмененной.
                    content:
                        application/problem+json:
                            schema:
                                $ref: "#/components/schemas/409"
                "422":
                    $ref: "#/components/responses/422"
    /api/public/operational-tags/v1.0/tags/query:
        post:
            operationId: getTags
            tags:
                - ДП
            summary: Возвращает список ДП
            x-beta: true
            requestBody:
                required: true
                description:
                    Возвращает список ДП, которые соответствуют одновременно всем
                    параметрам фильтрации, перечисленным в запросе.
                content:
                    application/json:
                        schema:
                            required:
                                - statusFilter
                            type: object
                            properties:
                                statusFilter:
                                    description: >
                                        Фильтр по статусу пометки.


                                        Пометка считается активной, если свойство `closedDateTime` отсутствует (или значение соответствует `null`),

                                        в противном случае она считается снятой (закрытой).

                                        Доступ к активным пометкам может выполняться эффективнее, поэтому при возможности следует пользоваться фильтром `active`.


                                        - `active` — фильтр пройдут только активные пометки.

                                        - `all` — фильтрация по статусу не выполняется.
                                    type: string
                                    enum:
                                        - all
                                        - active
                                fromDateTime:
                                    description: >
                                        Фильтр пройдут пометки, которые были активны в указанный момент
                                        времени и/или позже.

                                        То есть время их снятия (закрытия) отсутствует или больше либо равно указанному моменту времени.
                                    allOf:
                                        - $ref: "#/components/schemas/DateTime"
                                toDateTime:
                                    description: >
                                        Фильтр пройдут пометки, которые были активны в указанный момент
                                        времени и/или раньше.

                                        То есть время их установки (создания) меньше либо равно указанному моменту времени.
                                    allOf:
                                        - $ref: "#/components/schemas/DateTime"
                                tagTypeUids:
                                    description: >
                                        Фильтр пройдут пометки, тип которых присутствует в списке.

                                        Если список отсутствует или пуст, фильтрация по типам не выполняется.
                                    type: array
                                    items:
                                        $ref: "#/components/schemas/Uid"
                                placedOnUids:
                                    description: >
                                        Фильтр пройдут пометки, установленные на любой объект из списка.

                                        Если список отсутствует или пуст, фильтрация по объектам установки не выполняется.
                                    type: array
                                    items:
                                        $ref: "#/components/schemas/Uid"
            responses:
                "200":
                    description: Набор ДП, удовлетворяющих условиям фильтра, успешно получен.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - type: object
                                      required:
                                          - value
                                      properties:
                                          value:
                                              type: array
                                              items:
                                                  $ref: "#/components/schemas/Tag"
                                    - $ref: "#/components/schemas/CollectionPagePostResponse"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/operational-tags/v1.0/tags/{uid}":
        get:
            operationId: getByUidTag
            tags:
                - ДП
            summary: Возвращает ДП
            x-beta: true
            description: Возвращает описание ДП по идентификатору.
            parameters:
                - in: path
                  name: uid
                  description: UID ДП.
                  required: true
                  schema:
                      $ref: "#/components/schemas/Uid"
            responses:
                "200":
                    description: Описание ДП c заданным UID успешно получена.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        $ref: "#/components/schemas/Tag"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
    /api/public/operational-tags/v1.0/tag-types:
        get:
            operationId: getTagTypes
            tags:
                - Типы ДП
            summary: Возвращает список типов ДП
            x-beta: true
            responses:
                "200":
                    description: Список типов ДП успешно получен.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/TagType"
                "401":
                    $ref: "#/components/responses/401"
    "/api/public/operational-tags/v1.0/tag-types/{uid}":
        get:
            operationId: getTagType
            tags:
                - Типы ДП
            summary: Возвращает тип ДП
            x-beta: true
            description: Возвращает описание типа ДП по идентификатору.
            parameters:
                - in: path
                  name: uid
                  description: UID типа ДП.
                  required: true
                  schema:
                      $ref: "#/components/schemas/Uid"
            responses:
                "200":
                    description: Описание типа ДП успешно получено.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        $ref: "#/components/schemas/TagType"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
    /api/public/related-domains/v1.1/domains:
        get:
            operationId: getDomains
            tags:
                - Связанные домены
            summary: Возвращает информацию о связанных доменах
            description: В ответе будут данные обо всех связанных доменах.
            security: []
            responses:
                "200":
                    description: |
                        Запрос успешно выполнен.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/Domain"
    "/api/public/rt-events/v1.1/events/{rtEventId}":
        get:
            operationId: getRtEvent
            tags:
                - События реального времени
            summary: Возвращает событие реального времени
            description: Возвращает событие реального времени по его идентификатору.
            x-beta: true
            parameters:
                - $ref: "#/components/parameters/rtEventId"
            responses:
                "200":
                    description: Событие реального времени успешно получено.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        $ref: "#/components/schemas/RtEvent"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
    /api/public/rt-events/v1.1/events/query:
        post:
            operationId: getRtEvents
            tags:
                - События реального времени
            summary: Возвращает список событий реального времени
            description:
                Возвращает список событий реального времени, которые соответствуют
                одновременно всем параметрам фильтрации, перечисленным в запросе.
            x-beta: true
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            required:
                                - typeUids
                                - fromDateTime
                            type: object
                            properties:
                                ackFilter:
                                    $ref: "#/components/schemas/RtEventAckFilter"
                                closureFilter:
                                    $ref: "#/components/schemas/RtEventClosureFilter"
                                fromDateTime:
                                    description:
                                        Фильтр пройдут события, которые были созданы в указанный момент
                                        времени и/или позже.
                                    allOf:
                                        - $ref: "#/components/schemas/DateTime"
                                toDateTime:
                                    description: >
                                        Фильтр пройдут события, которые были созданы в указанный момент
                                        времени и/или раньше.
                                    allOf:
                                        - $ref: "#/components/schemas/DateTime"
                                typeUids:
                                    description: |
                                        Фильтр пройдут события, тип которых присутствует в списке.
                                    type: array
                                    minItems: 1
                                    uniqueItems: true
                                    items:
                                        $ref: "#/components/schemas/Uid"
                                associatedObjectUids:
                                    description: >
                                        Фильтр пройдут события, связанные с любым объектом из списка.

                                        Если список отсутствует, фильтрация по связанным объектам не выполняется.
                                    type: array
                                    minItems: 1
                                    uniqueItems: true
                                    items:
                                        $ref: "#/components/schemas/Uid"
            responses:
                "200":
                    description:
                        Набор событий реального времени, удовлетворяющих условиям фильтра,
                        успешно получен.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - type: object
                                      required:
                                          - value
                                      properties:
                                          value:
                                              type: array
                                              items:
                                                  $ref: "#/components/schemas/RtEvent"
                                    - $ref: "#/components/schemas/CollectionPagePostResponse"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "422":
                    $ref: "#/components/responses/422"
    /api/public/rt-events/v1.1/events:
        post:
            operationId: createRtEvent
            tags:
                - События реального времени
            summary: Создаёт событие реального времени
            x-beta: true
            description: Создаёт событие реального времени.
            requestBody:
                required: true
                description: Запрос на создание события реального времени.
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/RtEventCreateModel"
            responses:
                "201":
                    description: |
                        Событие успешно создано.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        description: Информация о созданном событии.
                                        type: object
                                        properties:
                                            id:
                                                description: |
                                                    Идентификатор созданного события.
                                                    Отсутствует для нехранимых событий.
                                                allOf:
                                                    - $ref: "#/components/schemas/RtEventId"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "403":
                    $ref: "#/components/responses/403"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/rt-events/v1.1/events/{rtEventId}/ack":
        post:
            operationId: ackRtEvent
            tags:
                - События реального времени
            summary: Квитирует событие реального времени
            x-beta: true
            description: Квитирует событие реального времени с указанным идентификатором.
            parameters:
                - $ref: "#/components/parameters/rtEventId"
            responses:
                "204":
                    description: |
                        Квитирование события выполнено успешно.
                "401":
                    $ref: "#/components/responses/401"
                "403":
                    $ref: "#/components/responses/403"
                "404":
                    $ref: "#/components/responses/404"
    /api/public/shift-personnel/v1.2/organisations/local/shift-personnel:
        get:
            tags:
                - Дежурный персонал
            x-beta: true
            summary: Возвращает список персонала на смене
            description: |
                Используется для получения списка персонала на смене,
                который находился в текущей организации в заданный момент времени.
                Возвращаются все присутствующие сотрудники на момент времени,
                независимо от смены, в которой они участвуют.
            operationId: getOrgLocalShiftPersonnel
            parameters:
                - name: time
                  in: query
                  required: false
                  description: >
                      Момент времени, для которого требуется получить список персонала на
                      смене.

                      Если значение не задано, то будет использоваться текущий момент времени.
                  schema:
                      $ref: "#/components/schemas/DateTime"
            responses:
                "200":
                    description: Список персонала на смене успешно получен.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/ShiftPerson"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "403":
                    description: Нет прав на работу с данными о персонале смен.
                    content:
                        application/problem+json:
                            schema:
                                $ref: "#/components/schemas/403"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/shift-personnel/v1.2/organisations/{organisationUid}/shift-personnel":
        get:
            tags:
                - Дежурный персонал
            x-beta: true
            summary: Возвращает список персонала на смене в указанной организации
            description: |
                Используется для получения списка персонала на смене,
                который находится в указанной организации в текущий момент времени.
                Возвращаются все присутствующие сотрудники, независимо от смены, 
                в которой они участвуют, кроме тех сотрудников, которые были поставлены 
                на смену с использованием функции "Ручной ввод персонала" 
                в приложении "Дежурный персонал".
            operationId: getOrgShiftPersonnel
            parameters:
                - name: organisationUid
                  in: path
                  required: true
                  description:
                      Идентификатор организации, для которой запрашивается персонал на
                      смене.
                  schema:
                      $ref: "#/components/schemas/Uid"
            responses:
                "200":
                    description: Список персонала на смене успешно получен.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/ShiftPerson"
                "401":
                    $ref: "#/components/responses/401"
                "403":
                    description: Нет прав на работу с данными о персонале смен.
                    content:
                        application/problem+json:
                            schema:
                                $ref: "#/components/schemas/403"
                "404":
                    description: Организация с запрашиваемым идентификатором не найдена.
                    content:
                        application/problem+json:
                            schema:
                                $ref: "#/components/schemas/404"
    "/api/public/switches/v2.0/switches/{switchUid}":
        get:
            operationId: getSwitch
            tags:
                - Выключатели
            summary: Возвращает описание выключателя
            x-beta: true
            parameters:
                - $ref: "#/components/parameters/switchUid"
            responses:
                "200":
                    description: Описание выключателя успешно получено.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        $ref: "#/components/schemas/Switch"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
    /api/public/switches/v2.0/switches/get:
        post:
            operationId: getSwitchCollection
            tags:
                - Выключатели
            summary: Возвращает описание множества выключателей
            x-beta: true
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - switchUidBatch
                            properties:
                                switchUidBatch:
                                    type: array
                                    minItems: 1
                                    items:
                                        description: UID выключателя.
                                        allOf:
                                            - $ref: "#/components/schemas/Uid"
            responses:
                "200":
                    description: >
                        Запрос успешно обработан, однако некоторые выключатели могут быть
                        не получены.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        type: array
                                        items:
                                            allOf:
                                                - type: object
                                                  description: |
                                                      Результат запроса для указанного `switchUid`.
                                                  required:
                                                      - switchUid
                                                  properties:
                                                      switchUid:
                                                          $ref: "#/components/schemas/Uid"
                                                - oneOf:
                                                      - type: object
                                                        required:
                                                            - value
                                                        properties:
                                                            value:
                                                                $ref: "#/components/schemas/Switch"
                                                      - type: object
                                                        required:
                                                            - error
                                                        properties:
                                                            error:
                                                                $ref: "#/components/schemas/ProblemDetails"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
                "422":
                    $ref: "#/components/responses/422"
    /api/public/switches/v2.0/switches/by-ccs-code:
        get:
            operationId: getSwitchByCcsCode
            tags:
                - Выключатели
            summary: Возвращает описание выключателя, найденного по СКК-коду
            x-beta: true
            parameters:
                - name: ccsCode
                  in: query
                  required: true
                  description: >
                      Код системы классификации и кодирования (идентификатор объекта во
                      внешней системе).
                  schema:
                      type: string
            responses:
                "200":
                    description: Описание выключателя успешно получено.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        $ref: "#/components/schemas/Switch"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
                "422":
                    $ref: "#/components/responses/422"
    /api/public/switches/v2.0/switches/get-by-ccs-code:
        post:
            operationId: getSwitchCollectionByCcsCode
            tags:
                - Выключатели
            summary: Возвращает описание множества выключателей, найденных по СКК-кодам
            x-beta: true
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - ccsCodeBatch
                            properties:
                                ccsCodeBatch:
                                    description: Список CCS кодов выключателей.
                                    type: array
                                    minItems: 1
                                    items:
                                        description:
                                            Код системы классификации и кодирования (идентификатор объекта во
                                            внешней системе).
                                        type: string
            responses:
                "200":
                    description: >
                        Запрос успешно обработан, однако некоторые выключатели могут быть
                        не получены.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        type: array
                                        items:
                                            allOf:
                                                - type: object
                                                  description: |
                                                      Результат запроса для указанного `ccsCode`.
                                                  required:
                                                      - ccsCode
                                                  properties:
                                                      ccsCode:
                                                          description: >
                                                              Код системы классификации и кодирования (идентификатор объекта во
                                                              внешней системе).
                                                          type: string
                                                - oneOf:
                                                      - type: object
                                                        required:
                                                            - value
                                                        properties:
                                                            value:
                                                                $ref: "#/components/schemas/Switch"
                                                      - type: object
                                                        required:
                                                            - error
                                                        properties:
                                                            error:
                                                                $ref: "#/components/schemas/ProblemDetails"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/switches/v2.0/switches/{switchUid}/statuses/at-time-moment":
        get:
            operationId: getSwitchStatusAtTimeMoment
            tags:
                - Статусы выключателей
            summary: Возвращает статус выключателя, актуальный на момент времени
            x-beta: true
            parameters:
                - $ref: "#/components/parameters/switchUid"
                - name: timeStamp
                  in: query
                  required: false
                  description: >
                      Момент времени, для которого требуется получить актуальный статус
                      выключателя. Если не задан, то будет использоваться текущий момент
                      времени.
                  schema:
                      $ref: "#/components/schemas/DateTime"
            responses:
                "200":
                    description: Статус выключателя успешно получен.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        $ref: "#/components/schemas/SwitchStatus"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
                "422":
                    $ref: "#/components/responses/422"
    /api/public/switches/v2.0/switches/statuses/get-at-time-moment:
        post:
            operationId: getSwitchCollectionStatusesAtTimeMoment
            tags:
                - Статусы выключателей
            summary: Возвращает статусы множества выключателей, актуальные на момент времени
            x-beta: true
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - switchUidBatch
                            properties:
                                switchUidBatch:
                                    type: array
                                    minItems: 1
                                    items:
                                        description: UID выключателя.
                                        allOf:
                                            - $ref: "#/components/schemas/Uid"
                                timeStamp:
                                    description:
                                        Момент времени, для которого требуется получить актуальный статус
                                        выключателя.
                                    allOf:
                                        - $ref: "#/components/schemas/DateTime"
            responses:
                "200":
                    description: >
                        Запрос успешно обработан, однако некоторые статусы могут быть не
                        получены.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        type: array
                                        items:
                                            allOf:
                                                - type: object
                                                  description: |
                                                      Результат запроса для указанного `switchUid`.
                                                  required:
                                                      - switchUid
                                                  properties:
                                                      switchUid:
                                                          $ref: "#/components/schemas/Uid"
                                                - oneOf:
                                                      - type: object
                                                        required:
                                                            - value
                                                        properties:
                                                            value:
                                                                $ref: "#/components/schemas/SwitchStatus"
                                                      - type: object
                                                        required:
                                                            - error
                                                        properties:
                                                            error:
                                                                $ref: "#/components/schemas/ProblemDetails"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/switches/v2.0/switches/{switchUid}/statuses/in-interval":
        get:
            operationId: getSwitchStatusesInInterval
            tags:
                - Статусы выключателей
            summary: Возвращает статусы выключателя в интервале времени
            x-beta: true
            parameters:
                - $ref: "#/components/parameters/switchUid"
                - name: fromTimeStamp
                  in: query
                  required: true
                  description: Левая граница интервала.
                  schema:
                      $ref: "#/components/schemas/DateTime"
                - name: toTimeStamp
                  in: query
                  required: true
                  description: Правая граница интервала.
                  schema:
                      $ref: "#/components/schemas/DateTime"
            responses:
                "200":
                    description: Статусы выключателя успешно получены.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/SwitchStatus"
                                    "@nextLink":
                                        $ref: "#/components/schemas/CollectionNextLink"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
                "422":
                    $ref: "#/components/responses/422"
    /api/public/switches/v2.0/switches/statuses/get-in-interval:
        post:
            operationId: getSwitchCollectionStatusesInInterval
            tags:
                - Статусы выключателей
            summary: Возвращает статусы множества выключателей в интервале времени
            x-beta: true
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - switchUidBatch
                                - fromTimeStamp
                                - toTimeStamp
                            properties:
                                switchUidBatch:
                                    type: array
                                    minItems: 1
                                    items:
                                        description: UID выключателя.
                                        allOf:
                                            - $ref: "#/components/schemas/Uid"
                                fromTimeStamp:
                                    description: Левая граница интервала.
                                    allOf:
                                        - $ref: "#/components/schemas/DateTime"
                                toTimeStamp:
                                    description: Правая граница интервала.
                                    allOf:
                                        - $ref: "#/components/schemas/DateTime"
            responses:
                "200":
                    description: >
                        Запрос успешно обработан, однако некоторые статусы могут быть не
                        получены.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        type: array
                                        items:
                                            allOf:
                                                - type: object
                                                  description: |
                                                      Результат запроса для указанного `switchUid`.
                                                  required:
                                                      - switchUid
                                                  properties:
                                                      switchUid:
                                                          $ref: "#/components/schemas/Uid"
                                                - oneOf:
                                                      - type: object
                                                        required:
                                                            - value
                                                        properties:
                                                            value:
                                                                description: Список статусов выключателя.
                                                                type: array
                                                                items:
                                                                    $ref: "#/components/schemas/SwitchStatus"
                                                            "@nextLink":
                                                                $ref: "#/components/schemas/CollectionNextLink"
                                                      - type: object
                                                        required:
                                                            - error
                                                        properties:
                                                            error:
                                                                $ref: "#/components/schemas/ProblemDetails"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "422":
                    $ref: "#/components/responses/422"
    "/api/public/topology/v2.0/{networkSchemaName}/connectivity-nodes/{connectivityNodeUid}":
        get:
            operationId: getConnectivityNode
            summary: Возвращает топологическое состояние точки подключения
            x-beta: true
            description: >
                Возвращает топологическое состояние выбранной точки подключения.
                Если точка подключения с указанным UID не будет найдена, будет возвращен
                ответ со статусом 404.
            tags:
                - Точки подключения
            parameters:
                - $ref: "#/components/parameters/networkSchemaName"
                - name: connectivityNodeUid
                  in: path
                  required: true
                  description:
                      UID точки подключения, топологическое состояние которой необходимо
                      получить.
                  schema:
                      $ref: "#/components/schemas/Uid"
            responses:
                "200":
                    description: >
                        Топологическое состояние выбранной точки подключения успешно
                        получено.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        $ref: "#/components/schemas/ConnectivityNodeTopology"
                "401":
                    $ref: "#/components/responses/401"
                "404":
                    $ref: "#/components/responses/404"
    "/api/public/topology/v2.0/{networkSchemaName}/connectivity-nodes/get":
        post:
            operationId: getConnectivityNodeCollection
            summary: Возвращает топологическое состояние коллекции точек подключения
            x-beta: true
            description: >
                Возвращает для каждой из выбранных точек подключения либо ее
                топологическое состояние, либо ошибку, если топологическое состояние для
                точки подключения определить не удалось.
            tags:
                - Точки подключения
            parameters:
                - $ref: "#/components/parameters/networkSchemaName"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - connectivityNodeUidBatch
                            properties:
                                connectivityNodeUidBatch:
                                    type: array
                                    minItems: 1
                                    items:
                                        $ref: "#/components/schemas/Uid"
            responses:
                "200":
                    description: >
                        Запрос успешно обработан, однако состояние некоторых точек
                        подключения может быть не получено.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        type: array
                                        items:
                                            allOf:
                                                - type: object
                                                  description: >
                                                      Результат запроса для указанного `connectivityNodeUid`.
                                                  required:
                                                      - connectivityNodeUid
                                                  properties:
                                                      connectivityNodeUid:
                                                          $ref: "#/components/schemas/Uid"
                                                - oneOf:
                                                      - type: object
                                                        required:
                                                            - value
                                                        properties:
                                                            value:
                                                                $ref: "#/components/schemas/ConnectivityNodeTopology"
                                                      - type: object
                                                        required:
                                                            - error
                                                        properties:
                                                            error:
                                                                $ref: "#/components/schemas/ProblemDetails"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "422":
                    $ref: "#/components/responses/422"
    /api/public/voltage-violations/v1.0/under-voltage-violations/query:
        post:
            tags:
                - Нарушения уровней напряжения
            summary: Возвращает нарушения ниже минимально допустимого
            x-beta: true
            description: >
                Возвращает информацию о снижениях уровня напряжения ниже минимально
                и аварийно допустимого значения по величине и длительности.
            operationId: getUnderVoltageViolations
            requestBody:
                description: Фильтр с условиями для выборки записей.
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UnderVoltageViolationsFilter"
            responses:
                "200":
                    description: Список записей успешно получен.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - type: object
                                      required:
                                          - value
                                      properties:
                                          value:
                                              type: array
                                              items:
                                                  $ref: "#/components/schemas/UnderVoltageViolation"
                                    - $ref: "#/components/schemas/CollectionPagePostResponse"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "422":
                    $ref: "#/components/responses/422"
    /api/public/voltage-violations/v1.0/over-voltage-violations/query:
        post:
            tags:
                - Нарушения уровней напряжения
            summary: Возвращает нарушения выше наибольшего рабочего
            x-beta: true
            description: >
                Возвращает информацию о превышениях уровня напряжения выше
                допустимого значения по величине и длительности.
            operationId: getOverVoltageViolations
            requestBody:
                description: Фильтр с условиями для выборки записей.
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/OverVoltageViolationsFilter"
            responses:
                "200":
                    description: Cписок записей успешно получен.
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - type: object
                                      required:
                                          - value
                                      properties:
                                          value:
                                              type: array
                                              items:
                                                  $ref: "#/components/schemas/OverVoltageViolation"
                                    - $ref: "#/components/schemas/CollectionPagePostResponse"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "422":
                    $ref: "#/components/responses/422"
    /api/public/voltage-violations/v1.0/over-voltage-violations/statistics/query:
        post:
            tags:
                - Статистика нарушений уровней напряжения
            summary: Возвращает статистику по нарушениям выше наибольшего рабочего
            x-beta: true
            description: >
                Возвращает статистику о нарушениях за период в части допустимого по
                величине и длительности повышения напряжения.
            operationId: getOverVoltageViolationStatistics
            requestBody:
                description: Фильтр с условиями для выборки записей.
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/OverVoltageViolationStatisticsFilter"
            responses:
                "200":
                    description: Список записей успешно получен.
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - value
                                properties:
                                    value:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/OverVoltageViolationControlPointStatistics"
                "400":
                    $ref: "#/components/responses/400"
                "401":
                    $ref: "#/components/responses/401"
                "422":
                    $ref: "#/components/responses/422"
components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
    schemas:
        "400":
            allOf:
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 400
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.1
                            title:
                                type: string
                                enum:
                                    - Bad Request
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - urn:monitel:problemdetails:bad-request
                            title:
                                type: string
                                enum:
                                    - Bad Request
                            errors:
                                description: >
                                    Содержит списки ошибок, сгруппированные по параметрам запроса.
                                    Названия свойств в данном объекте соответствуют названиям
                                    невалидных параметров.
                                type: object
                                additionalProperties:
                                    type: array
                                    items:
                                        type: string
                                example:
                                    param1:
                                        - value is too big
                                        - parameter is not expected in current request
                                    param2:
                                        - value is too small
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 400
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.1
                            title:
                                type: string
                                enum:
                                    - Bad Request
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - urn:monitel:problemdetails:bad-request
                            title:
                                type: string
                                enum:
                                    - Bad Request
                            errors:
                                description: >
                                    Содержит списки ошибок, сгруппированные по параметрам запроса.
                                    Названия свойств в данном объекте соответствуют названиям
                                    невалидных параметров.
                                type: object
                                additionalProperties:
                                    type: array
                                    items:
                                        type: string
                                example:
                                    param1:
                                        - value is too big
                                        - parameter is not expected in current request
                                    param2:
                                        - value is too small
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 400
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.1
                            title:
                                type: string
                                enum:
                                    - Bad Request
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - urn:monitel:problemdetails:bad-request
                            title:
                                type: string
                                enum:
                                    - Bad Request
                            errors:
                                description: >
                                    Содержит списки ошибок, сгруппированные по параметрам запроса.
                                    Названия свойств в данном объекте соответствуют названиям
                                    невалидных параметров.
                                type: object
                                additionalProperties:
                                    type: array
                                    items:
                                        type: string
                                example:
                                    param1:
                                        - value is too big
                                        - parameter is not expected in current request
                                    param2:
                                        - value is too small
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 400
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.1
                            title:
                                type: string
                                enum:
                                    - Bad Request
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - urn:monitel:problemdetails:bad-request
                            title:
                                type: string
                                enum:
                                    - Bad Request
                            errors:
                                description: >
                                    Содержит списки ошибок, сгруппированные по параметрам запроса.
                                    Названия свойств в данном объекте соответствуют названиям
                                    невалидных параметров.
                                type: object
                                additionalProperties:
                                    type: array
                                    items:
                                        type: string
                                example:
                                    param1:
                                        - value is too big
                                        - parameter is not expected in current request
                                    param2:
                                        - value is too small
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 400
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.1
                            title:
                                type: string
                                enum:
                                    - Bad Request
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - urn:monitel:problemdetails:bad-request
                            title:
                                type: string
                                enum:
                                    - Bad Request
                            errors:
                                description: >
                                    Содержит списки ошибок, сгруппированные по параметрам запроса.
                                    Названия свойств в данном объекте соответствуют названиям
                                    невалидных параметров.
                                type: object
                                additionalProperties:
                                    type: array
                                    items:
                                        type: string
                                example:
                                    param1:
                                        - value is too big
                                        - parameter is not expected in current request
                                    param2:
                                        - value is too small
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 400
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.1
                            title:
                                type: string
                                enum:
                                    - Bad Request
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - urn:monitel:problemdetails:bad-request
                            title:
                                type: string
                                enum:
                                    - Bad Request
                            errors:
                                description: >
                                    Содержит списки ошибок, сгруппированные по параметрам запроса.
                                    Названия свойств в данном объекте соответствуют названиям
                                    невалидных параметров.
                                type: object
                                additionalProperties:
                                    type: array
                                    items:
                                        type: string
                                example:
                                    param1:
                                        - value is too big
                                        - parameter is not expected in current request
                                    param2:
                                        - value is too small
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 400
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.1
                            title:
                                type: string
                                enum:
                                    - Bad Request
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - urn:monitel:problemdetails:bad-request
                            title:
                                type: string
                                enum:
                                    - Bad Request
                            errors:
                                description: >
                                    Содержит списки ошибок, сгруппированные по параметрам запроса.
                                    Названия свойств в данном объекте соответствуют названиям
                                    невалидных параметров.
                                type: object
                                additionalProperties:
                                    type: array
                                    items:
                                        type: string
                                example:
                                    param1:
                                        - value is too big
                                        - parameter is not expected in current request
                                    param2:
                                        - value is too small
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 400
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.1
                            title:
                                type: string
                                enum:
                                    - Bad Request
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - urn:monitel:problemdetails:bad-request
                            title:
                                type: string
                                enum:
                                    - Bad Request
                            errors:
                                description: >
                                    Содержит списки ошибок, сгруппированные по параметрам запроса.
                                    Названия свойств в данном объекте соответствуют названиям
                                    невалидных параметров.
                                type: object
                                additionalProperties:
                                    type: array
                                    items:
                                        type: string
                                example:
                                    param1:
                                        - value is too big
                                        - parameter is not expected in current request
                                    param2:
                                        - value is too small
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 400
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.1
                            title:
                                type: string
                                enum:
                                    - Bad Request
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - urn:monitel:problemdetails:bad-request
                            title:
                                type: string
                                enum:
                                    - Bad Request
                            errors:
                                description: >
                                    Содержит списки ошибок, сгруппированные по параметрам запроса.
                                    Названия свойств в данном объекте соответствуют названиям
                                    невалидных параметров.
                                type: object
                                additionalProperties:
                                    type: array
                                    items:
                                        type: string
                                example:
                                    param1:
                                        - value is too big
                                        - parameter is not expected in current request
                                    param2:
                                        - value is too small
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 400
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.1
                            title:
                                type: string
                                enum:
                                    - Bad Request
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - urn:monitel:problemdetails:bad-request
                            title:
                                type: string
                                enum:
                                    - Bad Request
                            errors:
                                description: >
                                    Содержит списки ошибок, сгруппированные по параметрам запроса.
                                    Названия свойств в данном объекте соответствуют названиям
                                    невалидных параметров.
                                type: object
                                additionalProperties:
                                    type: array
                                    items:
                                        type: string
                                example:
                                    param1:
                                        - value is too big
                                        - parameter is not expected in current request
                                    param2:
                                        - value is too small
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 400
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.1
                            title:
                                type: string
                                enum:
                                    - Bad Request
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - urn:monitel:problemdetails:bad-request
                            title:
                                type: string
                                enum:
                                    - Bad Request
                            errors:
                                description: >
                                    Содержит списки ошибок, сгруппированные по параметрам запроса.
                                    Названия свойств в данном объекте соответствуют названиям
                                    невалидных параметров.
                                type: object
                                additionalProperties:
                                    type: array
                                    items:
                                        type: string
                                example:
                                    param1:
                                        - value is too big
                                        - parameter is not expected in current request
                                    param2:
                                        - value is too small
                      - type: object
        "403":
            allOf:
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 403
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.3
                            title:
                                type: string
                                enum:
                                    - Forbidden
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 403
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.3
                            title:
                                type: string
                                enum:
                                    - Forbidden
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 403
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.3
                            title:
                                type: string
                                enum:
                                    - Forbidden
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 403
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.3
                            title:
                                type: string
                                enum:
                                    - Forbidden
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 403
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.3
                            title:
                                type: string
                                enum:
                                    - Forbidden
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 403
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.3
                            title:
                                type: string
                                enum:
                                    - Forbidden
                      - type: object
        "404":
            allOf:
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 404
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.4
                            title:
                                type: string
                                enum:
                                    - Not Found
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 404
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.4
                            title:
                                type: string
                                enum:
                                    - Not Found
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 404
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.4
                            title:
                                type: string
                                enum:
                                    - Not Found
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 404
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.4
                            title:
                                type: string
                                enum:
                                    - Not Found
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 404
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.4
                            title:
                                type: string
                                enum:
                                    - Not Found
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 404
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.4
                            title:
                                type: string
                                enum:
                                    - Not Found
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 404
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.4
                            title:
                                type: string
                                enum:
                                    - Not Found
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 404
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.4
                            title:
                                type: string
                                enum:
                                    - Not Found
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 404
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.4
                            title:
                                type: string
                                enum:
                                    - Not Found
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 404
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.4
                            title:
                                type: string
                                enum:
                                    - Not Found
                      - type: object
        "409":
            allOf:
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 409
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.8
                            title:
                                type: string
                                enum:
                                    - Conflict
                      - type: object
        "422":
            allOf:
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 422
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.1
                            title:
                                type: string
                                enum:
                                    - Unprocessable Entity
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 422
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.1
                            title:
                                type: string
                                enum:
                                    - Unprocessable Entity
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 422
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.1
                            title:
                                type: string
                                enum:
                                    - Unprocessable Entity
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 422
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.1
                            title:
                                type: string
                                enum:
                                    - Unprocessable Entity
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 422
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.1
                            title:
                                type: string
                                enum:
                                    - Unprocessable Entity
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 422
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.1
                            title:
                                type: string
                                enum:
                                    - Unprocessable Entity
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 422
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.1
                            title:
                                type: string
                                enum:
                                    - Unprocessable Entity
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 422
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.1
                            title:
                                type: string
                                enum:
                                    - Unprocessable Entity
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 422
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.1
                            title:
                                type: string
                                enum:
                                    - Unprocessable Entity
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 422
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.1
                            title:
                                type: string
                                enum:
                                    - Unprocessable Entity
                      - type: object
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  properties:
                      status:
                          type: integer
                          enum:
                              - 422
                - anyOf:
                      - type: object
                        properties:
                            type:
                                type: string
                                enum:
                                    - https://tools.ietf.org/html/rfc7231#section-6.5.1
                            title:
                                type: string
                                enum:
                                    - Unprocessable Entity
                      - type: object
        _Events:
            oneOf:
                - $ref: "#/components/schemas/EventStreamStartedEvent"
                - $ref: "#/components/schemas/EventStreamBrokenEvent"
                - $ref: "#/components/schemas/DataNotificationEvent"
        EventType:
            type: string
            description: Тип события.
        ProblemDetails:
            description: >
                Описание проблемы в формате "Problem Details" в соответствии со
                спецификацией [RFC 7807](https://tools.ietf.org/html/rfc7807).
            type: object
            additionalProperties: true
            required:
                - type
                - title
                - status
            properties:
                type:
                    type: string
                    description: >
                        A URI reference [RFC3986] that identifies the problem type.  This
                        specification encourages that, when dereferenced, it provide
                        human-readable documentation for the problem type (e.g., using HTML
                        [W3C.REC-html5-20141028]).  When this member is not present, its
                        value is assumed to be "about:blank".
                title:
                    type: string
                    description: >
                        A short, human-readable summary of the problem type.  It SHOULD NOT
                        change from occurrence to occurrence of the problem, except for
                        purposes of localization (e.g., using proactive content negotiation;
                        see [RFC7231], Section 3.4).
                status:
                    type: integer
                    format: int32
                    description: >
                        The HTTP status code ([RFC7231], Section 6) generated by the origin
                        server for this occurrence of the problem.
                detail:
                    type: string
                    description: >
                        A human-readable explanation specific to this occurrence of the
                        problem.
                instance:
                    type: string
                    description: >
                        A URI reference that identifies the specific occurrence of the
                        problem.  It may or may not yield further information if
                        dereferenced.
        EventStreamStartedEvent:
            type: object
            description: |
                Данные события о запуске потока доставки событий.
            properties:
                eventTypes:
                    description: |
                        Список типов событий, для которых запущен поток доставки.
                    type: array
                    items:
                        $ref: "#/components/schemas/EventType"
        EventStreamBrokenEvent:
            type: object
            description: |
                Данные события о временном прерывании потока доставки событий
                в связи с нештатной ситуацией.
            properties:
                eventTypes:
                    description: |
                        Список типов событий, для которых прерван поток доставки.
                    type: array
                    items:
                        $ref: "#/components/schemas/EventType"
        DateTime:
            description: >
                Время в формате `date-time` из
                [RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14).
            type: string
            format: date-time
        EquipmentViolationsStatistics:
            type: object
            description: |
                Древовидное представление оборудования и его дочернего оборудования
                с указанием количества и длительности как перегрузок, так и аварий.
            required:
                - equipmentUid
                - warningViolationsCount
                - warningViolationsDuration
                - emergencyViolationsCount
                - emergencyViolationsDuration
            properties:
                equipmentUid:
                    description: Идентификатор оборудования.
                    type: string
                    format: uuid
                warningViolationsCount:
                    description: Суммарное (за период) количество перегрузок.
                    type: integer
                    format: int32
                warningViolationsDuration:
                    description: Суммарная (за период) продолжительность перегрузок, сек.
                    type: number
                    format: double
                emergencyViolationsCount:
                    description: Суммарное (за период) количество аварий.
                    type: integer
                    format: int32
                emergencyViolationsDuration:
                    description: Суммарная (за период) продолжительность аварий, сек.
                    type: number
                    format: double
                childEquipment:
                    description: Дочернее оборудование с нарушениями по току.
                    type: array
                    items:
                        $ref: "#/components/schemas/EquipmentViolationsStatistics"
        Uid:
            type: string
            format: uuid
            description: Глобально-уникальный идентификатор.
        ViolationType:
            description: |
                Тип нарушений:
                 * `warning` - Предупреждение.
                 * `emergency` - Авария.
            type: string
            enum:
                - warning
                - emergencyByTime
                - emergencyByCurrent
                - emergency
        EquipmentViolation:
            description: Описание превышения допустимой токовой нагрузки оборудования.
            type: object
            required:
                - violationType
                - startDateTime
                - endDateTime
                - duration
            properties:
                violationType:
                    $ref: "#/components/schemas/ViolationType"
                startDateTime:
                    description: Начало нарушения.
                    type: string
                    format: date-time
                endDateTime:
                    description: Окончание нарушения.
                    type: string
                    format: date-time
                duration:
                    description: Суммарная длительность нарушения, сек.
                    type: number
                    format: double
                limit:
                    description: |
                        Значение допустимой токовой нагрузки.
                        Не указывается для ЛЭП, трансформатора и его обмоток.
                    type: number
                    format: double
                overloadMultiplicity:
                    description: |
                        Кратность перегрузки.
                        Указывается только для обмотки трансформатора.
                    type: number
                    format: double
        CollectionNextLink:
            description: >
                Ссылка на следующую страницу с элементами коллекции,
                соответствующей запросу. Присутствует если сервер из-за собственных
                ограничений не смог поместить весь запрошенный результат в один ответ.
            type: string
            format: url
        PhaseCode:
            description: >
                Код электрической фазы оборудования передающих или
                распределительных сетей, цепей нагрузок.


                `none` соответствует отсутствию привязки измерения к фазе.
            type: string
            enum:
                - none
                - A
                - AB
                - ABC
                - ABCN
                - ABN
                - AC
                - ACN
                - AN
                - B
                - BC
                - BCN
                - BN
                - C
                - CN
                - N
                - s1
                - s12
                - s12N
                - s1N
                - s2
                - s2N
                - abc
                - ABCabc
        IndirectLinkDescriptor:
            description: >
                Описание косвенной ссылки, позволяющее однозначно определить
                значение измерения.
            type: object
            required:
                - measurement
                - measurementValueTypeUid
            properties:
                measurement:
                    description: Селектор измерения.
                    oneOf:
                        - description:
                              Селектор измерения по исходному объекту, типу измерения и коду
                              фазы.
                          type: object
                          required:
                              - objectUid
                              - measurementTypeUid
                              - phaseCode
                          properties:
                              objectUid:
                                  description: UID исходного объекта, для которого требуется получить значение.
                                  type: string
                                  format: uuid
                              measurementTypeUid:
                                  description: UID типа измерения.
                                  type: string
                                  format: uuid
                              phaseCode:
                                  $ref: "#/components/schemas/PhaseCode"
                        - description: Селектор измерения по его UID.
                          type: object
                          required:
                              - measurementUid
                          properties:
                              measurementUid:
                                  description: UID измерения.
                                  type: string
                                  format: uuid
                measurementValueTypeUid:
                    description: UID типа значения измерения.
                    type: string
                    format: uuid
                measurementValueSourceUids:
                    description: |
                        Фильтр источников значений измерений.
                        Порядок элементов в массиве не влияет на приоритет источников.
                    type: array
                    items:
                        description: UID источника значений измерений.
                        type: string
                        format: uuid
        IndirectLinkResolution:
            description: |
                Разрешенная косвенная ссылка.
            type: object
            required:
                - measurementValueUid
            properties:
                measurementValueUid:
                    description: UID значения измерения.
                    type: string
                    format: uuid
        IndirectLinkRemoteReference:
            description: >
                Ссылка на связанную организацию,

                которая потенциально способна разрешить косвенную ссылку и предоставить данные значений измерений.


                Может присутствовать только в ответах на запросы разрешения косвенных ссылок

                с установленным параметром `$crossOrganization`.

                Возвращается для тех ссылок, которые невозможно разрешить в текущей организации.
            type: object
            required:
                - "@remoteOrganizationUid"
            properties:
                "@remoteOrganizationUid":
                    description: >
                        UID удаленной организации,

                        которая может разрешить указанную косвенную ссылку.


                        Запросы в удаленную организацию можно выполнять

                        с помощью [API Доступа к удаленным организациям](ckapi://remote-organizations).

                        Эти запросы следует группировать по организации

                        для уменьшения нагрузки на систему и повышения производительности.
                    type: string
                    format: uuid
        ValueType:
            description: >
                Тип значения измерения:
                  - `numeric` — числовой тип, включающий в себя аналоговые (вещественный тип с плавающей точкой) и дискретные (целочисленный тип) измерения;
                  - `string` — строковый тип.
            type: string
            enum:
                - numeric
                - string
        QualityCodesFilter:
            description: >
                Фильтр по кодам качества:
                  - `all` — фильтр пройдут все значения, независимо от их кодов качества;
                  - `good` — фильтр пройдут только достоверные значения.

                Фильтр применим только для значений измерений, хранящихся по изменению.
            type: string
            enum:
                - all
                - good
            default: all
        NullifyFutureByChangeValues:
            type: boolean
            default: false
            description: >
                Флаг зануления данных значений, хранящихся по изменению, за будущее
                время:

                - true - при получении данных за будущее время, возвращается экземпляр с нулевым кодом качества;

                - false - при получении данных за будущее время, возвращается экземпляр с ближайшей слева меткой времени.
        QualityCodes:
            type: integer
            format: int32
            description: >
                Коды качества в виде битов, упакованных в 32-битное знаковое число.
                Если бит номер 32 установлен, перевод в десятичное представление
                использует дополнительный код (two's complement).
        Data:
            description: Экземпляр данных значения измерения.
            type: object
            required:
                - uid
                - qCode
                - value
            properties:
                uid:
                    $ref: "#/components/schemas/Uid"
                timeStamp:
                    description: Первая метка времени.
                    allOf:
                        - $ref: "#/components/schemas/DateTime"
                timeStamp2:
                    description: Вторая метка времени.
                    allOf:
                        - $ref: "#/components/schemas/DateTime"
                qCode:
                    $ref: "#/components/schemas/QualityCodes"
                value:
                    description:
                        Фактическое значение экземпляра данных значения измерения. Тип
                        данных зависит от типа измерения.
                    anyOf:
                        - description: Дискретное значение.
                          type: integer
                          format: int64
                        - description: Аналоговое значение.
                          type: number
                          format: double
                        - description: Строковое значение.
                          type: string
                    example: 15
        DataTableRow:
            description: Строка в таблице данных значений измерений.
            type: object
            required:
                - uid
                - value
            properties:
                uid:
                    description: UID значения измерения, данные которого находятся в строке таблицы.
                    allOf:
                        - $ref: "#/components/schemas/Uid"
                value:
                    type: array
                    items:
                        $ref: "#/components/schemas/Data"
        AggregatedData:
            description: |
                Результат расчёта агрегированной статистической функции 
                по достоверным данным значения измерения на интервале.
            type: object
            required:
                - aggregatedValue
                - qualityTimeRatio
            properties:
                aggregatedValue:
                    description: >
                        Агрегированное значение измерения среди достоверных данных,
                        актуальных на интервале.

                        Если достоверных данных значения измерения на интервале нет, то 0.
                    type: number
                    format: double
                qualityTimeRatio:
                    description: >
                        Отношение длительности времени, в которое данные значения измерения
                        были достоверными на интервале,

                        к общей длительности интервала (от 0 до 1).
                    type: number
                    format: double
        DataWriteModel:
            description: Экземпляр данных значения измерения для записи.
            type: object
            required:
                - uid
                - qCode
                - value
            properties:
                uid:
                    $ref: "#/components/schemas/Uid"
                timeStamp:
                    $ref: "#/components/schemas/DateTime"
                timeStamp2:
                    $ref: "#/components/schemas/DateTime"
                qCode:
                    $ref: "#/components/schemas/QualityCodes"
                value:
                    description: >
                        Фактическое значение экземпляра данных значения измерения. Тип
                        данных зависит от типа измерения. Для числовых типов допускается
                        использовать тип, не соответствующий модели: - в случае записи
                        аналогового значения в дискретное будет выполнено округление вниз до
                        целого числа, - в случае записи дискретного значения в аналоговое
                        будет выполнено преобразование к аналоговому.
                    anyOf:
                        - description: Дискретное значение.
                          type: integer
                          format: int64
                        - description: Аналоговое значение.
                          type: number
                          format: double
                        - description: Строковое значение.
                          type: string
                    example: 15
        DataWriteError:
            allOf:
                - $ref: "#/components/schemas/ProblemDetails"
                - type: object
                  required:
                      - entity
                  properties:
                      entity:
                          type: object
                          required:
                              - uid
                              - index
                          properties:
                              uid:
                                  $ref: "#/components/schemas/Uid"
                              index:
                                  description:
                                      Индекс экземпляра данных значения измерения из запроса, которое не
                                      удалось записать.
                                  type: integer
                                  format: int32
                                  minimum: 0
        SubscriptionType:
            description: >
                Тип подписки на данные значений измерений. Данные по подписке будут
                получены:
                  - `actual` — по мере их актуализации;
                  - `written` — по мере их записи в базу (в том числе в архив).
            type: string
            enum:
                - actual
                - written
            default: actual
        DataNotificationEvent:
            type: object
            description: Данные события с измененными экземплярами данных значений измерений.
            required:
                - data
            properties:
                data:
                    type: array
                    items:
                        $ref: "#/components/schemas/Data"
        ModelDescriptor:
            description: |
                Описание объектной модели.
            type: object
            required:
                - modelUid
                - modelDisplayName
                - modelCanonicalName
                - profileVersion
                - features
            properties:
                modelUid:
                    description: UID объектной модели.
                    allOf:
                        - $ref: "#/components/schemas/Uid"
                modelDisplayName:
                    description: Название объектной модели.
                    type: string
                modelCanonicalName:
                    description: Каноническое название объектной модели.
                    type: string
                profileVersion:
                    description: Версия профиля объектной модели.
                    type: string
                features:
                    description: Список свойств, поддерживаемых данной моделью.
                    type: array
                    items:
                        description: |
                            Свойство модели:
                            - `versions` - модель поддерживает версии;
                            - `releases` - модель поддерживает выпуски.
                        type: string
                        enum:
                            - versions
                            - releases
        MetaEntity:
            description: Базовые свойства любой сущности метаданных объектной модели.
            type: object
            properties:
                displayName:
                    description: Отображаемое имя сущности метаданных.
                    type: string
                description:
                    description: Описание сущности метаданных.
                    type: string
                deprecated:
                    description:
                        Флаг установлен, если текущая сущность метаданных считается
                        устаревшей.
                    type: boolean
                    default: false
        MetaPrimitiveFormat:
            description: >
                Формат данных примитивного типа объектной модели.

                - `boolean` — `true` или `false`;

                - `byte` — 8-битное беззнаковое целое число;

                - `int8` — 8-битное знаковое целое число;

                - `int16` — 16-битное знаковое целое число;

                - `int32` — 32-битное знаковое целое число;

                - `int64` — 64-битное знаковое целое число;

                - `float` — 32-битное число с плавающей точкой;

                - `double` — 64-битное число с плавающей точкой;

                - `date` — дата в формате [RFC 3339, section 5.6](https://www.rfc-editor.org/rfc/rfc3339#section-5.6);

                - `partial-time` — время без часового пояса в формате [RFC 3339, section 5.6](https://www.rfc-editor.org/rfc/rfc3339#section-5.6);

                - `date-time` — дата и время в UTC в формате [RFC 3339, section 5.6](https://www.rfc-editor.org/rfc/rfc3339#section-5.6);

                - `string` — строка;

                - `uuid` — UUID (универсальный уникальный идентификатор);

                - `blob` — бинарные данные неопределенного формата;

                - `stream` — бинарные данные неопределенного формата.
            type: string
            enum:
                - boolean
                - byte
                - int8
                - int16
                - int32
                - int64
                - float
                - double
                - date
                - partial-time
                - date-time
                - string
                - uuid
                - blob
                - stream
        MetaPrimitive:
            description: Примитивный тип данных модели.
            allOf:
                - $ref: "#/components/schemas/MetaEntity"
                - type: object
                  required:
                      - typeKind
                      - format
                  properties:
                      typeKind:
                          description: Разновидность типа данных.
                          type: string
                          enum:
                              - primitive
                      format:
                          $ref: "#/components/schemas/MetaPrimitiveFormat"
        MetaEnumValue:
            description: Описание значения перечисления.
            allOf:
                - $ref: "#/components/schemas/MetaEntity"
                - type: object
                  required:
                      - value
                  properties:
                      value:
                          description: |
                              Значение перечисления.
                          type: string
        MetaEnum:
            description: Перечисление — тип данных модели.
            allOf:
                - $ref: "#/components/schemas/MetaEntity"
                - type: object
                  required:
                      - typeKind
                      - values
                  properties:
                      typeKind:
                          description: Разновидность типа данных.
                          type: string
                          enum:
                              - enum
                      values:
                          description: |
                              Список значений перечислений.
                          type: array
                          items:
                              $ref: "#/components/schemas/MetaEnumValue"
        MetaStructAttribute:
            description: |
                Атрибут структурного типа данных объектной модели.
            allOf:
                - $ref: "#/components/schemas/MetaEntity"
                - type: object
                  required:
                      - type
                  properties:
                      type:
                          description: |
                              Название типа из набора типов метаданных,
                              которому соответствуют значения текущего атрибута.
                              Тип атрибута не может быть классом объектной модели.
                          type: string
                      nullable:
                          description: >
                              Флаг, определяющий, может ли значение атрибута отсутствовать
                              (равняться `null`).
                          type: boolean
                          default: false
                      defaultValue:
                          description: |
                              Значение для атрибута по умолчанию.
                              Тип значения соответствует типу атрибута.
        MetaDataType:
            description: |
                DataType — тип данных модели.
            allOf:
                - $ref: "#/components/schemas/MetaEntity"
                - type: object
                  required:
                      - typeKind
                      - value
                  properties:
                      typeKind:
                          description: Разновидность типа данных.
                          type: string
                          enum:
                              - dataType
                      value:
                          description: Атрибут значения DataType.
                          allOf:
                              - $ref: "#/components/schemas/MetaStructAttribute"
                      staticAttributes:
                          description: Статические атрибуты DataType.
                          type: object
                          additionalProperties:
                              $ref: "#/components/schemas/MetaStructAttribute"
        MetaCompound:
            description: |
                Составной тип данных модели.
            allOf:
                - $ref: "#/components/schemas/MetaEntity"
                - type: object
                  required:
                      - typeKind
                      - attributes
                  properties:
                      typeKind:
                          description: Разновидность типа данных.
                          type: string
                          enum:
                              - compound
                      attributes:
                          description: Атрибуты составного типа.
                          type: object
                          additionalProperties:
                              $ref: "#/components/schemas/MetaStructAttribute"
        MetaClassAttribute:
            description: |
                Атрибут класса объектной модели.
            allOf:
                - $ref: "#/components/schemas/MetaEntity"
                - type: object
                  required:
                      - propertyKind
                  properties:
                      propertyKind:
                          description: Разновидность свойства класса.
                          type: string
                          enum:
                              - attribute
                - $ref: "#/components/schemas/MetaStructAttribute"
        MetaClassAssociation:
            description: >
                Ассоциация класса объектной модели.

                Значением ассоциации является ссылка или коллекцию ссылок на объекты класса модели.
            allOf:
                - $ref: "#/components/schemas/MetaEntity"
                - type: object
                  required:
                      - propertyKind
                      - type
                      - inverseProperty
                  properties:
                      propertyKind:
                          description: Разновидность свойства класса.
                          type: string
                          enum:
                              - association
                      type:
                          description: >
                              Название класса из набора типов метаданных,

                              на экземпляр (объект) которого может ссылаться значение текущей ассоциации.
                          type: string
                      nullable:
                          description: >
                              Флаг, определяющий, может ли ссылка отсутствовать (равняться
                              `null`).


                              Для ассоциаций-коллекций отсутствие ссылки эквивалентно пустой коллекции ссылок.
                          type: boolean
                          default: false
                      isCollection:
                          description: >
                              Флаг, который определяет,

                              может ли значение ассоциации ссылаться одновременно на несколько объектов модели.
                          type: boolean
                          default: false
                      inverseProperty:
                          description: >
                              Название связанного свойства-ассоциации в классе,

                              на экземпляры (объекты) которого может ссылаться текущая ассоциация.


                              Ассоциация - это двусторонняя связь между двумя объектами,

                              и связанная ассоциация - это набор обратных ссылок для ссылок текущей ассоциации.
                          type: string
        MetaClassProperty:
            discriminator:
                propertyName: propertyKind
                mapping:
                    attribute: "#/components/schemas/MetaClassAttribute"
                    association: "#/components/schemas/MetaClassAssociation"
            oneOf:
                - $ref: "#/components/schemas/MetaClassAttribute"
                - $ref: "#/components/schemas/MetaClassAssociation"
        MetaClass:
            description: |
                Класс объектной модели.
            allOf:
                - $ref: "#/components/schemas/MetaEntity"
                - type: object
                  required:
                      - typeKind
                  properties:
                      typeKind:
                          description: Разновидность типа данных.
                          type: string
                          enum:
                              - class
                      parent:
                          description:
                              Название класса из набора типов метаданных, от которого напрямую
                              наследуется текущий класс.
                          type: string
                      properties:
                          description: Свойства класса.
                          type: object
                          additionalProperties:
                              $ref: "#/components/schemas/MetaClassProperty"
        MetaType:
            discriminator:
                propertyName: typeKind
                mapping:
                    primitive: "#/components/schemas/MetaPrimitive"
                    enum: "#/components/schemas/MetaEnum"
                    dataType: "#/components/schemas/MetaDataType"
                    compound: "#/components/schemas/MetaCompound"
                    class: "#/components/schemas/MetaClass"
            oneOf:
                - $ref: "#/components/schemas/MetaPrimitive"
                - $ref: "#/components/schemas/MetaEnum"
                - $ref: "#/components/schemas/MetaDataType"
                - $ref: "#/components/schemas/MetaCompound"
                - $ref: "#/components/schemas/MetaClass"
        ModelMetadata:
            description: |
                Метаданные объектной модели.
            type: object
            required:
                - types
            properties:
                types:
                    description: >
                        Словарь типов объектной модели, в котором ключ — название типа, а
                        значение — его описание.
                    type: object
                    additionalProperties:
                        $ref: "#/components/schemas/MetaType"
        ModelVersionDescriptor:
            description: |
                Описание версии объектной модели.
            type: object
            required:
                - versionId
                - name
                - state
            properties:
                versionId:
                    description: Идентификатор версии модели.
                    type: integer
                    format: int32
                baseVersionId:
                    description:
                        Идентификатор версии модели, на базе которой была создана текущая
                        описываемая версия.
                    type: integer
                    format: int32
                name:
                    description: Название версии модели.
                    type: string
                state:
                    description: >
                        Состояние версии модели:

                        - `open` - версия открыта для редактирования;

                        - `closed` - версия закрыта для редактирования;

                        - `final` - версия финализирована и больше не может быть открыта для редактирования;

                        - `actual` - версия финализирована и является актуальной в данный момент.
                    type: string
                    enum:
                        - open
                        - closed
                        - final
                        - actual
                description:
                    description: Дополнительное описание версии модели.
                    type: string
                releaseId:
                    description: >
                        Идентификатор выпуска из расписания. Присутствует, если версия
                        привязана к выпуску.
                    type: integer
                    format: int32
        ModelReleaseDescriptor:
            description: |
                Описание выпуска объектной модели.
            type: object
            required:
                - releaseId
                - releaseDateTime
            properties:
                releaseId:
                    description: Идентификатор выпуска модели.
                    type: integer
                    format: int32
                description:
                    description: Дополнительное описание выпуска модели.
                    type: string
                releaseDateTime:
                    description: Время выпуска.
                    allOf:
                        - $ref: "#/components/schemas/DateTime"
        Filter:
            type: object
            additionalProperties: false
            description: >
                Фильтр для запроса чтения записей.

                Содержит значения атрибутов записей, в соответствии с которыми осуществляется выборка записей.

                Для того чтобы запись попала в выборку, она должна удовлетворять всем указанным в фильтре условиям.
            required:
                - fromDateTime
            properties:
                fromDateTime:
                    type: string
                    format: date-time
                    description: >
                        Начало интервала.

                        Фильтр пройдут записи, у которых время создания больше или равно заданному значению.
                toDateTime:
                    type: string
                    format: date-time
                    description: >
                        Конец интервала.

                        Фильтр пройдут записи, у которых время создания меньше или равно заданному значению.
                eventCategoryUids:
                    type: array
                    description: >
                        Список идентификаторов категорий события.

                        Фильтр пройдут записи, у которых идентификатор категории входит в заданный список.
                    items:
                        $ref: "#/components/schemas/Uid"
                eventObjectUids:
                    type: array
                    description: >
                        Список идентификаторов объектов события.

                        Фильтр пройдут записи, у которых среди идентификаторов объектов есть хотя бы один,

                        который входит в заданный список.
                    items:
                        $ref: "#/components/schemas/Uid"
                authorUids:
                    type: array
                    description: >
                        Список идентификаторов авторов.

                        Фильтр пройдут записи, у которых идентификатор автора входит в заданный список.
                    items:
                        $ref: "#/components/schemas/Uid"
                eventContentSubstring:
                    type: string
                    description: >
                        Подстрока текстового содержания события.

                        Фильтр пройдут записи, у которых текстовое содержание имеет заданную подстроку.
        Person:
            type: object
            additionalProperties: false
            description: Сотрудник.
            required:
                - uid
            properties:
                uid:
                    $ref: "#/components/schemas/Uid"
                    type: string
                    format: uuid
                    description: Идентификатор сотрудника.
                name:
                    type: string
                    description: Имя сотрудника.
        ModelObject:
            type: object
            additionalProperties: false
            description: Объект модели CIM16.
            required:
                - uid
            properties:
                uid:
                    $ref: "#/components/schemas/Uid"
                name:
                    type: string
                    description: Наименование.
        RecordEventCategory:
            type: object
            additionalProperties: false
            description: >
                Категория события записи.

                Событие записи обязательно относится к какой-либо категории,

                например "Ведение режима", "Вывод в ремонт", "Приём-передача смены" и т.п.

                Используется для удобства анализа журнала.
            required:
                - uid
            properties:
                uid:
                    $ref: "#/components/schemas/Uid"
                name:
                    type: string
                    description: Наименование.
        CommunicationDirection:
            type: string
            enum:
                - incoming
                - outgoing
            description: |
                Направление коммуникации:
                - `incoming` - входящая;
                - `outgoing` - исходящая.
        RecordEventCommunication:
            type: object
            additionalProperties: false
            description: Коммуникация между персоналом по теме события.
            required:
                - direction
                - dateTime
            properties:
                personUid:
                    type: string
                    format: uuid
                    description: Идентификатор персонала, с которым осуществлялась коммуникация.
                personName:
                    type: string
                    description: Наименование персонала, с которым осуществлялась коммуникация.
                direction:
                    $ref: "#/components/schemas/CommunicationDirection"
                dateTime:
                    type: string
                    format: date-time
                    description: Время осуществления коммуникации.
        RecordEvent:
            type: object
            additionalProperties: false
            description: Данные по событию на основе которого была создана запись.
            required:
                - dateTime
                - content
                - objects
                - category
            properties:
                dateTime:
                    type: string
                    description: Время события.
                    format: date-time
                formattedContent:
                    type: string
                    description: Описание события в форматированном виде (с содержанием тегов HTML5).
                content:
                    type: string
                    description: Описание события в текстовом виде.
                objects:
                    type: array
                    description:
                        Список объектов, на которых произошло или с которыми каким-либо
                        образом связано событие.
                    items:
                        $ref: "#/components/schemas/ModelObject"
                category:
                    $ref: "#/components/schemas/RecordEventCategory"
                communications:
                    type: array
                    description: Список коммуникаций между персоналом по теме события.
                    items:
                        $ref: "#/components/schemas/RecordEventCommunication"
        RecordAction:
            type: string
            enum:
                - modify
                - cancel,
            description: |
                Действие, выполняемое одной записью по отношению к другой:
                - `modify` - изменение;
                - `cancel` - отмена;
        RecordRef:
            type: object
            additionalProperties: false
            properties:
                recordUid:
                    type: string
                    description: Идентификатор связанной записи
                    format: uuid
                action:
                    $ref: "#/components/schemas/RecordAction"
        Record:
            type: object
            additionalProperties: false
            description: Данные существующей записи.
            required:
                - uid
                - creationDateTime
                - author
                - id
                - event
            properties:
                uid:
                    type: string
                    description: Идентификатор записи.
                    format: uuid
                creationDateTime:
                    type: string
                    description: Время записи.
                    format: date-time
                author:
                    description: Автор записи.
                    allOf:
                        - $ref: "#/components/schemas/Person"
                id:
                    type: integer
                    description: Целочисленный идентификатор записи.
                    format: int32
                event:
                    $ref: "#/components/schemas/RecordEvent"
                previousRecordRef:
                    description: Описание связанной записи, которую изменяет/отмененяет текущая запись
                    allOf:
                        - $ref: "#/components/schemas/RecordRef"
                nextRecordRef:
                    description: Описание связанной записи, которая изменяет/отмененяет текущую запись
                    allOf:
                        - $ref: "#/components/schemas/RecordRef"
        CollectionNextPostLink:
            description: >
                Адрес для запроса следующей страницы с элементами коллекции,
                соответствующей исходному запросу.

                Присутствует если сервер из-за собственных ограничений не смог поместить весь

                запрошенный результат в один ответ.


                По данному адресу должен быть выполнен POST-запрос с телом из поля `@nextPostBody`.
            type: string
            format: url
        CollectionNextPostBody:
            description: >
                Тело запроса следующей страницы с элементами коллекции,
                соответствующей исходному запросу.

                Присутствует если сервер из-за собственных ограничений не смог поместить весь

                запрошенный результат в один ответ.


                Тело должно передаваться в POST-запросе по адресу из поля `@nextPostLink`.

                Не следует интерпретировать содержимое данного объекта.
            type: object
        CollectionPagePostResponse:
            type: object
            properties:
                "@nextPostLink":
                    $ref: "#/components/schemas/CollectionNextPostLink"
                "@nextPostBody":
                    $ref: "#/components/schemas/CollectionNextPostBody"
        RecordEventWrite:
            type: object
            additionalProperties: false
            description: Данные по событию на основе которого создается запись.
            required:
                - dateTime
                - content
                - objectUids
                - categoryUid
            properties:
                dateTime:
                    type: string
                    description: Время события.
                    format: date-time
                content:
                    type: string
                    description: Текстовое описание события.
                objectUids:
                    type: array
                    description: >
                        Список идентификаторов объектов,

                        на которых произошло или с которыми каким-либо образом связано событие.
                    items:
                        $ref: "#/components/schemas/Uid"
                categoryUid:
                    description: >
                        Идентификатор категории события записи.

                        Событие записи обязательно должно относиться к какой-либо категории,

                        например "Ведение режима", "Вывод в ремонт", "Приём-передача смены" и т.п.

                        Используется для удобства анализа журнала.
                    type: string
                    format: uuid
                communications:
                    type: array
                    description: Список коммуникаций между персоналом по теме события.
                    items:
                        $ref: "#/components/schemas/RecordEventCommunication"
        TagType:
            type: object
            description: Тип диспетчерской пометки.
            required:
                - uid
            properties:
                uid:
                    description: Идентификатор типа ДП.
                    allOf:
                        - $ref: "#/components/schemas/Uid"
                name:
                    description: Имя типа ДП.
                    type: string
        TagPlacementObject:
            type: object
            description: Объект, на который установлена ДП.
            required:
                - uid
            properties:
                uid:
                    description: Идентификатор объекта информационной модели.
                    allOf:
                        - $ref: "#/components/schemas/Uid"
                name:
                    description: Имя объекта информационной модели, предоставленное сервисом ДП.
                    type: string
        UserObject:
            type: object
            required:
                - uid
            description: Пользователь.
            properties:
                uid:
                    description: Идентификатор пользователя.
                    allOf:
                        - $ref: "#/components/schemas/Uid"
                        - $ref: "#/components/schemas/Uid"
                name:
                    description: Имя пользователя, предоставленное сервисом ДП.
                    type: string
        Tag:
            type: object
            description: Диспетчерская пометка.
            required:
                - uid
                - tagType
                - placedOn
                - createdBy
                - createdDateTime
                - lastModifiedDateTime
            properties:
                uid:
                    description: Идентификатор ДП.
                    allOf:
                        - $ref: "#/components/schemas/Uid"
                tagType:
                    $ref: "#/components/schemas/TagType"
                placedOn:
                    $ref: "#/components/schemas/TagPlacementObject"
                description:
                    description: Комментарий к ДП.
                    type: string
                createdDateTime:
                    description: Время установки (создания) ДП.
                    allOf:
                        - $ref: "#/components/schemas/DateTime"
                createdBy:
                    description: Пользователь, установивший (создавший) ДП.
                    allOf:
                        - $ref: "#/components/schemas/UserObject"
                lastModifiedDateTime:
                    description: Время последнего изменения ДП.
                    allOf:
                        - $ref: "#/components/schemas/DateTime"
                closedDateTime:
                    description: >
                        Время снятия (закрытия) ДП.


                        Пометка считается активной, если свойство `closedDateTime` отсутствует (или значение соответствует `null`), 

                        в противном случае она считается снятой (закрытой).
                    allOf:
                        - $ref: "#/components/schemas/DateTime"
                closedBy:
                    description: Пользователь, выполнивший снятие (закрытие) ДП.
                    allOf:
                        - $ref: "#/components/schemas/UserObject"
        RoleEnum:
            description: |
                Роли:
                  - `unknown` - роль неизвестна;
                  - `master` — источник;
                  - `slave` — приёмник.
            type: string
            enum:
                - unknown
                - master
                - slave
        Domain:
            description: Данные связанного домена.
            type: object
            required:
                - name
                - role
                - coreApiBaseAddressTemplate
            properties:
                name:
                    description: Имя домена СК-11.
                    type: string
                role:
                    description: Роль домена.
                    $ref: "#/components/schemas/RoleEnum"
                coreApiBaseAddressTemplate:
                    description: >
                        Шаблон базового адреса [API ядра CK-11](ckapi://core).

                        Для доступа к другим API следует использовать

                        [стандартную схему обнаружения адресов API](ckapi://core/#/info/description/обнаружение-адресов-api),

                        используя API ядра CK-11 **целевого** домена.
                    type: string
                    example: https://webentrypoint/api/public/core/v{apiVersion}
        RtEventId:
            description: |
                Уникальный идентификатор события реального времени.
                Может отсутствовать для нехранимых событий.
            type: string
            minLength: 1
            maxLength: 36
        AssociatedObject:
            type: object
            description:
                Объект информационной модели, с которым связано событие реального
                времени.
            required:
                - uid
            properties:
                uid:
                    description: Идентификатор объекта информационной модели.
                    allOf:
                        - $ref: "#/components/schemas/Uid"
        RtEventStringParam:
            description: Строковый параметр события реального времени.
            type: object
            required:
                - type
                - string
            properties:
                type:
                    description: Тип параметра.
                    type: string
                    enum:
                        - string
                string:
                    description: Значение параметра.
                    type: string
        RtEventInt64Param:
            description: Целочисленный параметр события реального времени.
            type: object
            required:
                - type
                - int64
            properties:
                type:
                    description: Тип параметра.
                    type: string
                    enum:
                        - int64
                int64:
                    description: Значение параметра.
                    type: integer
                    format: int64
        RtEventDoubleParam:
            description: Числовой параметр события реального времени.
            type: object
            required:
                - type
                - double
            properties:
                type:
                    description: Тип параметра.
                    type: string
                    enum:
                        - double
                double:
                    description: Значение параметра.
                    type: number
                    format: double
        RtEventDateTimeParam:
            description: Параметр события реального времени, содержащий дату и время.
            type: object
            required:
                - type
            properties:
                type:
                    description: Тип параметра.
                    type: string
                    enum:
                        - dateTime
                dateTime:
                    description: Значение параметра.
                    allOf:
                        - $ref: "#/components/schemas/DateTime"
        RtEventUuidParam:
            description:
                Параметр события реального времени, содержащий универсальный
                уникальный идентификатор.
            type: object
            required:
                - type
                - uuid
            properties:
                type:
                    description: Тип параметра.
                    type: string
                    enum:
                        - uuid
                uuid:
                    description: Значение параметра.
                    type: string
                    format: uuid
        RtEventParameter:
            description: Параметр события реального времени.
            required:
                - type
            properties:
                type:
                    description: Тип параметра.
                    type: string
            oneOf:
                - $ref: "#/components/schemas/RtEventStringParam"
                - $ref: "#/components/schemas/RtEventInt64Param"
                - $ref: "#/components/schemas/RtEventDoubleParam"
                - $ref: "#/components/schemas/RtEventDateTimeParam"
                - $ref: "#/components/schemas/RtEventUuidParam"
            discriminator:
                propertyName: type
                mapping:
                    string: "#/components/schemas/RtEventStringParam"
                    int64: "#/components/schemas/RtEventInt64Param"
                    double: "#/components/schemas/RtEventDoubleParam"
                    dateTime: "#/components/schemas/RtEventDateTimeParam"
                    uuid: "#/components/schemas/RtEventUuidParam"
        RtEventParametersArray:
            description: |
                Массив параметров события реального времени.
                Параметры следуют в порядке, определяемом информационной моделью.
            type: array
            items:
                $ref: "#/components/schemas/RtEventParameter"
        RtEvent:
            description: Событие реального времени.
            type: object
            required:
                - typeUid
                - associatedWith
                - createdBy
                - createdDateTime
                - message
                - isExternal
            properties:
                id:
                    $ref: "#/components/schemas/RtEventId"
                typeUid:
                    description: Идентификатор типа события.
                    allOf:
                        - $ref: "#/components/schemas/Uid"
                associatedWith:
                    $ref: "#/components/schemas/AssociatedObject"
                createdBy:
                    description: Пользователь, создавший событие.
                    allOf:
                        - $ref: "#/components/schemas/UserObject"
                createdDateTime:
                    description: Время создания события.
                    allOf:
                        - $ref: "#/components/schemas/DateTime"
                message:
                    description: Сообщение с описанием события.
                    type: string
                parameters:
                    $ref: "#/components/schemas/RtEventParametersArray"
                ackSupported:
                    description: >
                        Флаг поддержки квитирования:
                          - false - не поддерживается;
                          - true - поддерживается (либо ожидает квитирования, либо уже квитировано).
                    type: boolean
                    default: false
                ackDateTime:
                    description:
                        Время квитирования события. Наличие данного свойства говорит о том,
                        что событие квитировано.
                    allOf:
                        - $ref: "#/components/schemas/DateTime"
                ackBy:
                    description: Пользователь, квитировавший событие.
                    allOf:
                        - $ref: "#/components/schemas/UserObject"
                ackedEventId:
                    description: >
                        Уникальный идентификатор события, которое было квитировано данным
                        событием.

                        Имеет смысл и присутствует только в событиях квитирующего типа.
                    allOf:
                        - $ref: "#/components/schemas/RtEventId"
                closureSupported:
                    description: |
                        Флаг поддержки закрытия:
                          - false - не поддерживается;
                          - true - поддерживается (либо ожидает закрытия, либо уже закрыто).
                    type: boolean
                    default: false
                closedDateTime:
                    description:
                        Время закрытия события. Наличие данного свойства говорит о том, что
                        событие закрыто.
                    allOf:
                        - $ref: "#/components/schemas/DateTime"
                closedBy:
                    description: Пользователь, закрывший событие.
                    allOf:
                        - $ref: "#/components/schemas/UserObject"
                isExternal:
                    description: |
                        Флаг установлен, если событие получено из внешней системы.
                    type: boolean
                    default: false
        RtEventAckFilter:
            description: >
                Фильтр по поддержке и состоянию квитирования события реального
                времени:
                  - `ackSupported` - предполагающие квитирование события (как квитированные, так и ожидающие квитирования события);
                  - `ackPending` - ожидающие квитирования события;
                  - `ackReceived` - квитированные события;
                  - `noAckSupport` - не предполагающие квитирование события.
            type: string
            enum:
                - ackSupported
                - ackPending
                - ackReceived
                - noAckSupport
        RtEventClosureFilter:
            description: >
                Фильтр по поддержке  и состоянию закрытия события реального
                времени:
                  - `closureSupported` - предполагающие закрытия события (как закрытые, так и ожидающие закрытия события);
                  - `opened` - ожидающие закрытия события;
                  - `closed` - закрытые события.
                  - `noClosureSupport` - не предполагающие закрытия события.
            type: string
            enum:
                - closureSupported
                - opened
                - closed
                - noClosureSupport
        RtEventCreateModel:
            type: object
            description: Данные для создания события.
            required:
                - typeUid
                - associatedObjectUid
                - message
            properties:
                typeUid:
                    description: Идентификатор типа события.
                    allOf:
                        - $ref: "#/components/schemas/Uid"
                associatedObjectUid:
                    description:
                        Идентификатор объекта информационной модели, ассоциированного с
                        событием.
                    allOf:
                        - $ref: "#/components/schemas/Uid"
                externalCreateDateTime:
                    description: >
                        Время создания события во внешней системе.

                        При указании этого параметра событие считается внешним, время создания будет равно переданному параметру.

                        При отсутствии этого параметра событие считается внутренним, время создания будет равно текущему времени.
                    allOf:
                        - $ref: "#/components/schemas/DateTime"
                parameters:
                    $ref: "#/components/schemas/RtEventParametersArray"
                message:
                    description: >
                        Сообщение.

                        Рекомендуемый формат сообщения определяется информационной моделью.

                        Если формат сообщения предполагает подстановку в него значений параметров,

                        она должна быть выполнена пользователем самостоятельно.
                    type: string
                    minLength: 1
        ShiftRole:
            type: object
            description: |
                Роль сотрудника на смене.
            required:
                - uid
            properties:
                uid:
                    type: string
                    format: uuid
                    description: Идентификатор роли.
                name:
                    type: string
                    description: Наименование роли.
        ShiftPerson:
            type: object
            description: Данные сотрудника на смене.
            required:
                - person
                - roles
            properties:
                person:
                    $ref: "#/components/schemas/Person"
                roles:
                    type: array
                    description: |
                        Список ролей сотрудника на смене.
                    items:
                        $ref: "#/components/schemas/ShiftRole"
        Switch:
            description: Описание выключателя.
            type: object
            required:
                - uid
                - class
            properties:
                uid:
                    description: UID выключателя.
                    allOf:
                        - $ref: "#/components/schemas/Uid"
                class:
                    description: Имя конкретного класса данного выключателя.
                    type: string
                psrType:
                    description: UID типа ресурса энергосистемы.
                    allOf:
                        - $ref: "#/components/schemas/Uid"
                ccsCode:
                    description: >
                        Код системы классификации и кодирования (идентификатор объекта во
                        внешней системе).
                    type: string
        SwitchStatus:
            description: Описание статуса выключателя.
            type: object
            required:
                - value
                - timeStamp
                - validity
            properties:
                value:
                    description: Значение статуса выключателя.
                    type: integer
                    format: int32
                timeStamp:
                    description: Время установки данного значения.
                    allOf:
                        - $ref: "#/components/schemas/DateTime"
                validity:
                    description: Характеристика достоверности значения.
                    type: string
                    enum:
                        - invalid
                        - good
                        - questionable
                        - inspect
        ConnectivityNodeTopology:
            type: object
            required:
                - energized
                - grounded
                - nominalVoltage
            properties:
                energized:
                    description: |
                        Признак наличия напряжения в узле:
                        - больше ноля — под напряжением;
                        - меньше ноля — не под напряжением;
                        - ноль — неопределено.
                    type: integer
                    format: int32
                grounded:
                    description: |
                        Признак заземлённости:
                        - больше ноля — заземлен;
                        - меньше ноля — не заземлен;
                        - ноль — неопределено.

                        Заземлённым считается топологический узел,
                        имеющий электрическую связь с включёнными заземляющими ножами
                        в пределах одной подстанции.
                    type: integer
                    format: int32
                nominalVoltage:
                    description: Значение стандартного номинального напряжения в кВ.
                    type: number
                    format: double
        UnderVoltageViolationsFilter:
            type: object
            description: |
                Фильтр для запроса "Ниже минимально допустимого".
            required:
                - fromDateTime
                - toDateTime
                - nominalVoltages
            properties:
                fromDateTime:
                    type: string
                    format: date-time
                    description: |
                        Начало интервала.
                toDateTime:
                    type: string
                    format: date-time
                    description: |
                        Конец интервала.
                minDuration:
                    description: >
                        Минимальная длительность нарушений ниже минимально допустимого,
                        которые должны учитываться в запросе, сек.
                    type: number
                    format: double
                nominalVoltages:
                    description: Номинальные напряжения, кВ.
                    type: array
                    items:
                        type: number
                        format: double
        OverVoltageViolationsFilter:
            type: object
            description: |
                Фильтр для запроса "Выше наибольшего рабочего".
            required:
                - fromDateTime
                - toDateTime
                - nominalVoltages
            properties:
                fromDateTime:
                    type: string
                    format: date-time
                    description: |
                        Начало интервала.
                toDateTime:
                    type: string
                    format: date-time
                    description: |
                        Конец интервала.
                nominalVoltages:
                    description: Номинальные напряжения, кВ.
                    type: array
                    items:
                        type: number
                        format: double
        OverVoltageViolationStatisticsFilter:
            type: object
            description: |
                Фильтр для запроса "Статистика нарушений выше наибольшего рабочего".
            required:
                - fromDateTime
                - toDateTime
                - nominalVoltages
                - warningViolationsMinDuration
            properties:
                fromDateTime:
                    type: string
                    format: date-time
                    description: |
                        Начало интервала.
                toDateTime:
                    type: string
                    format: date-time
                    description: |
                        Конец интервала.
                nominalVoltages:
                    description: Номинальные напряжения, кВ.
                    type: array
                    items:
                        type: number
                        format: double
                warningViolationsMinDuration:
                    description: >
                        Минимальная длительность нарушений по значению, которые должны
                        учитываться в запросе, сек.
                    type: number
                    format: double
        UnderVoltageViolation:
            type: object
            description: Результат выполнения запроса "Ниже минимально допустимого".
            required:
                - violationType
                - startDateTime
                - limitValue
                - factValue
                - equipmentUid
            properties:
                violationType:
                    $ref: "#/components/schemas/ViolationType"
                startDateTime:
                    description: Начало нарушения.
                    type: string
                    format: date-time
                endDateTime:
                    description: Окончание нарушения.
                    type: string
                    format: date-time
                limitValue:
                    description: Минимально допустимое напряжение, кВ.
                    type: number
                    format: double
                factValue:
                    description: Фактическое значение напряжения, кВ.
                    type: number
                    format: double
                equipmentUid:
                    description: Идентификатор оборудования, на котором зафиксировано нарушение.
                    type: string
                    format: uuid
        OverVoltageViolationControlPointStatistics:
            type: object
            description:
                Результат выполнения запроса "Статистика нарушений выше наибольшего
                рабочего".
            required:
                - voltageControlPointUid
                - warningViolationsCount
                - warningViolationsDuration
                - emergencyViolationsCount
                - emergencyViolationsDuration
            properties:
                voltageControlPointUid:
                    description: Идентификатор объекта контроля (контрольного пункта).
                    type: string
                    format: uuid
                warningViolationsCount:
                    description:
                        Суммарное (за период) количество нарушений с заданной длительностью
                        и более.
                    type: integer
                    format: int32
                warningViolationsDuration:
                    description:
                        Суммарная (за период) продолжительность нарушений с заданной
                        длительностью и более, сек.
                    type: string
                    format: duration
                emergencyViolationsCount:
                    description: Суммарное (за период) количество нарушений по длительности.
                    type: integer
                    format: int32
                emergencyViolationsDuration:
                    description:
                        Суммарная (за период) продолжительность нарушений по длительности,
                        сек.
                    type: string
                    format: duration
                emergencyViolationsAllowedCountPerYear:
                    description: Максимально допустимое количество нарушений по длительности за год.
                    type: integer
                    format: int32
        OverVoltageViolation:
            type: object
            description: Результат выполнения запроса "Выше наибольшего рабочего".
            required:
                - violationType
                - startDateTime
                - overVoltageDuration
                - factValue
                - isSingle
                - rangeMinValue
                - rangeMaxValue
                - equipmentUid
            properties:
                violationType:
                    $ref: "#/components/schemas/ViolationType"
                startDateTime:
                    description: Начало нарушения.
                    type: string
                    format: date-time
                endDateTime:
                    description: Окончание нарушения.
                    type: string
                    format: date-time
                overVoltageDuration:
                    description: Суммарная длительность нарушения, сек.
                    type: string
                    format: duration
                factValue:
                    description: Фактическое значение напряжения, кВ.
                    type: number
                    format: double
                isSingle:
                    description: Флаг, фиксирующий характер нарушения (единичное или интегральное).
                    type: boolean
                rangeMinValue:
                    description: Минимальная граница диапазона напряжений, кВ.
                    type: number
                    format: double
                rangeMaxValue:
                    description: Максимальная граница диапазона напряжений, кВ.
                    type: number
                    format: double
                equipmentUid:
                    description: Идентификатор оборудования, на котором зафиксировано нарушение.
                    type: string
                    format: uuid
    parameters:
        channelId:
            name: channelId
            in: path
            required: true
            description: Идентификатор канала получения событий.
            schema:
                type: string
        fromDateTime:
            name: fromDateTime
            in: query
            required: true
            description: >
                Начало интервала. 

                Фильтр пройдут действующие нарушения на указанный момент времени или позже.
            schema:
                $ref: "#/components/schemas/DateTime"
        toDateTime:
            name: toDateTime
            in: query
            required: true
            description: >
                Конец интервала.

                Фильтр пройдут действующие нарушения на указанный момент времени или раньше.
            schema:
                $ref: "#/components/schemas/DateTime"
        onlyMajorEquipment:
            name: onlyMajorEquipment
            in: query
            required: false
            description: >
                * `true` - возвращается только основное контролируемое по току
                электросиловое оборудование.

                * `false` - возвращается оборудование без фильтрации по этому условию.
            schema:
                type: boolean
                default: false
        equipmentUid:
            name: equipmentUid
            in: path
            required: true
            description: Идентификатор оборудования.
            schema:
                $ref: "#/components/schemas/Uid"
        valueType:
            name: valueType
            in: path
            required: true
            schema:
                $ref: "#/components/schemas/ValueType"
        measurementValueUid:
            name: measurementValueUid
            in: path
            required: true
            description: UID значения измерения.
            schema:
                $ref: "#/components/schemas/Uid"
        subscriptionId:
            name: subscriptionId
            in: path
            required: true
            description: |
                Идентификатор подписки.
            schema:
                type: string
        modelUid:
            name: modelUid
            required: true
            in: path
            description: UID объектной модели.
            schema:
                $ref: "#/components/schemas/Uid"
        modelVersion:
            name: modelVersion
            required: true
            in: path
            description: >
                Идентификатор или псевдоним версии модели. Псевдоним `actual`
                соответствует актуальной версии модели.
            schema:
                anyOf:
                    - type: string
                    - type: integer
                      format: int32
        modelRelease:
            name: modelRelease
            required: true
            in: path
            description: Идентификатор или псевдоним выпуска модели.
            schema:
                anyOf:
                    - type: string
                    - type: integer
                      format: int32
        RecordUid:
            name: uid
            in: path
            required: true
            description: Идентификатор записи.
            schema:
                $ref: "#/components/schemas/Uid"
        rtEventId:
            name: rtEventId
            in: path
            required: true
            description: Уникальный идентификатор события реального времени.
            schema:
                $ref: "#/components/schemas/RtEventId"
        switchUid:
            name: switchUid
            in: path
            required: true
            description: UID выключателя.
            schema:
                $ref: "#/components/schemas/Uid"
        networkSchemaName:
            name: networkSchemaName
            in: path
            required: true
            description: |
                Определяет схему сети, для которой необходимо получить топологию:
                - `normal` — схема сети в нормальном состоянии (нормальная схема);
                - `actual` — схема сети в актуальном состоянии (актуальная схема).
            schema:
                type: string
                enum:
                    - normal
                    - actual
    responses:
        "400":
            description: Использованы некорректные параметры запроса.
            content:
                application/problem+json:
                    schema:
                        $ref: "#/components/schemas/400"
                        allOf:
                            - $ref: "#/components/schemas/ProblemDetails"
                            - type: object
                              properties:
                                  status:
                                      description: Статус.
                                      type: integer
                                      enum:
                                          - 400
                            - anyOf:
                                  - type: object
                                    properties:
                                        type:
                                            type: string
                                            description: Тип.
                                            enum:
                                                - https://tools.ietf.org/html/rfc7231#section-6.5.1
                                        title:
                                            type: string
                                            description: Bad request.
                                            enum:
                                                - Bad Request
                                  - type: object
                                    properties:
                                        type:
                                            description: Тип.
                                            type: string
                                            enum:
                                                - urn:monitel:problemdetails:bad-request
                                        title:
                                            description: Bad request.
                                            type: string
                                            enum:
                                                - Bad Request
                                        errors:
                                            description: >
                                                Содержит списки ошибок, сгруппированные по параметрам запроса.
                                                Названия свойств в данном объекте соответствуют
                                                названиям невалидных параметров.
                                            type: object
                                            additionalProperties:
                                                type: array
                                                items:
                                                    description: Дополнительные свойства.
                                                    type: string
                                            example:
                                                param1:
                                                    - value is too big
                                                    - parameter is not expected in current request
                                                param2:
                                                    - value is too small
                                  - type: object
        "401":
            description: Требуется выполнить аутентификацию.
            headers:
                WWW-Authenticate:
                    description: Предлагаемые способы аутентификации и их параметры.
                    schema:
                        type: string
        "403":
            description: Выполнение операции запрещено для текущего пользователя.
            content:
                application/problem+json:
                    schema:
                        $ref: "#/components/schemas/403"
        "404":
            description: Объект не найден.
            content:
                application/problem+json:
                    schema:
                        $ref: "#/components/schemas/404"
        "422":
            description: >
                Запрос синтаксически корректен, но его невозможно обработать по
                причине наличия семантических ошибок.
            content:
                application/problem+json:
                    schema:
                        $ref: "#/components/schemas/422"
                        allOf:
                            - $ref: "#/components/schemas/ProblemDetails"
                            - type: object
                              properties:
                                  status:
                                      description: Статус.
                                      type: integer
                                      enum:
                                          - 422
                            - anyOf:
                                  - type: object
                                    properties:
                                        type:
                                            description: Тип.
                                            type: string
                                            enum:
                                                - https://tools.ietf.org/html/rfc7231#section-6.5.1
                                        title:
                                            type: string
                                            description: Bad Request.
                                            enum:
                                                - Bad Request
                                  - type: object
                                    properties:
                                        type:
                                            description: Тип.
                                            type: string
                                            enum:
                                                - urn:monitel:problemdetails:bad-request
                                        title:
                                            description: Bad Request.
                                            type: string
                                            enum:
                                                - Bad Request
                                        errors:
                                            description: >
                                                Содержит списки ошибок, сгруппированные по параметрам запроса.
                                                Названия свойств в данном объекте соответствуют
                                                названиям невалидных параметров.
                                            type: object
                                            additionalProperties:
                                                description: Дополнительные свойства.
                                                type: array
                                                items:
                                                    type: string
                                            example:
                                                param1:
                                                    - value is too big
                                                    - parameter is not expected in current request
                                                param2:
                                                    - value is too small
                                  - type: object
